{"total":5,"pageSize":10,"pageCount":1,"data":[{"title":"uni-app基本使用","slug":"uni-app基本使用","date":"2021-11-20T06:09:30.000Z","updated":"2022-02-14T12:11:27.275Z","comments":true,"path":"api/articles/uni-app基本使用.json","excerpt":"","keywords":null,"cover":"/2021/11/20/uni-app%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/1603934615365.png","content":"<h1 id=\"一、uni-app初识\"><a href=\"#一、uni-app初识\" class=\"headerlink\" title=\"一、uni-app初识\"></a>一、uni-app初识</h1><p><code>uni-app</code> 是一个使用 <a href=\"https://vuejs.org/\">Vue.js</a> 开发所有前端应用的框架，开发者编写一套代码，可发布到iOS、Android、H5、以及各种小程序（微信/支付宝/百度/头条/QQ/钉钉）等多个平台。</p>\n<p>即使不跨端，<code>uni-app</code>同时也是更好的小程序开发框架。</p>\n<p>具有vue和微信小程序的开发经验，可快速上手uni-app</p>\n<p>为什么要去学习uni-app？</p>\n<p>相对开发者来说，减少了学习成本，因为只学会uni-app之后，即可开发出iOS、Android、H5、以及各种小程序的应用，不需要再去学习开发其他应用的框架，相对公司而言，也大大减少了开发成本。</p>\n<h1 id=\"二、如何使用\"><a href=\"#二、如何使用\" class=\"headerlink\" title=\"二、如何使用\"></a>二、如何使用</h1><h2 id=\"1、注册\"><a href=\"#1、注册\" class=\"headerlink\" title=\"1、注册\"></a>1、注册</h2><p>网址： <a href=\"https://mp.weixin.qq.com/\">微信注册</a>，根据指引填写信息</p>\n<h2 id=\"2、登录设置\"><a href=\"#2、登录设置\" class=\"headerlink\" title=\"2、登录设置\"></a>2、登录设置</h2><p>登录后找到设置模块，在这里你可以设置一些小程序的主题信息，比较重要的就是这个AppID(小程序ID)，唯一的，相当于微信小程序的敲门砖</p>\n<h2 id=\"3、选框架，安装开发工具\"><a href=\"#3、选框架，安装开发工具\" class=\"headerlink\" title=\"3、选框架，安装开发工具\"></a>3、选框架，安装开发工具</h2><p>工具安装：</p>\n<p>微信开发者工具</p>\n<p>HBuilderX</p>\n<p>工具安装好开始进入正式开发。</p>\n<h2 id=\"4、项目开发\"><a href=\"#4、项目开发\" class=\"headerlink\" title=\"4、项目开发\"></a>4、项目开发</h2><p>1、新建一个uni-app项目</p>\n<ul>\n<li><p>点击HbuilderX菜单栏文件&gt;项目&gt;新建</p>\n</li>\n<li><p>选择uni-app,填写项目名称，项目创建的目录</p>\n<img src=\"/2021/11/20/uni-app%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/1603934615365.png\" class>\n\n<p><img src=\"/2021/11/20/uni-app%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/Users\\爱海\\myblog\\source_posts\\uni-app基本使用\\1603934615365.png\"></p>\n</li>\n</ul>\n<p>这就是创建一个简单的框架，</p>\n<p>2、 项目结构 </p>\n<img src=\"/2021/11/20/uni-app%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/20201010192722478.png\" class>\n\n<p><img src=\"/2021/11/20/uni-app%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/Users\\爱海\\myblog\\source_posts\\uni-app基本使用\\20201010192722478.png\"></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├─ common/              # 公用工具库文件</span><br><span class=\"line\">├─ components/          # uni-app组件目录</span><br><span class=\"line\">│  ├─ common/        # 公共组件</span><br><span class=\"line\">├─ models/              # 接口调取目录</span><br><span class=\"line\">├─ hybrid/              # 存放本地网页的目录</span><br><span class=\"line\">├─ pages/               # 业务页面文件存放的目录</span><br><span class=\"line\">│  ├─ index/            </span><br><span class=\"line\">│  │  ├─ index.vue      # 首页面</span><br><span class=\"line\">│  ├─ functions/            </span><br><span class=\"line\">│  │  ├─ functions.vue      # 组件列表页面</span><br><span class=\"line\">│  ├─ mine/            </span><br><span class=\"line\">│  │  ├─ index.vue      # 个人中心页面</span><br><span class=\"line\">├─ platforms/           # 存放各平台专用页面的目录</span><br><span class=\"line\">├─ static               # 存放应用引用静态资源（如图片、视频等）的目录，注意：静态资源只能存放于此</span><br><span class=\"line\">├─ unpackage/           # 打包目录</span><br><span class=\"line\">├─ utils/           # 工具目录</span><br><span class=\"line\">├─ wxcomponents/        # 存放小程序组件的目录</span><br><span class=\"line\">├─ App.vue              #  应用配置，用来配置App全局样式以及监听</span><br><span class=\"line\">├─ main.js              # Vue初始化入口文件</span><br><span class=\"line\">├─ manifest.json        # 配置应用名称、appid、logo、版本等打包信息</span><br><span class=\"line\">├─ package.json         # 增加uni-app扩展节点，可实现自定义条件编译平台</span><br><span class=\"line\">├─ pages.json         # 全局配置，决定页面文件的路径、窗口样式、原生的导航栏、底部的原生tabbar 等。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>我们运行可以运行在浏览器也可以运行在微信开发者工具</p>\n<p><strong>注意：</strong></p>\n<ul>\n<li><p>如果是第一次使用，需要先配置小程序ide的相关路径，才能运行成功</p>\n</li>\n<li><p>微信开发者工具在设置中安全设置，服务端口开启</p>\n</li>\n</ul>\n<img src=\"/2021/11/20/uni-app%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/1603165078372.png\" class>\n\n<p><img src=\"/2021/11/20/uni-app%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/Users\\爱海\\myblog\\source_posts\\uni-app基本使用\\1603165078372.png\"></p>\n<p>Tips:</p>\n<p>static 目录下的 js 文件不会被编译，如果里面有 es6 的代码，不经过转换直接运行，在手机设备上会报错。</p>\n<p>css、less/scss 等资源同样不要放在 static 目录下，建议这些公用的资源放在 common 目录下。</p>\n<p>3、项目运行<br>小程序项目运行前需要配置微信开发者工具的默认路径，以及配置小程序的AppID。<br>微信开发者工具的默认路径配置，在HBuilder的工具设置中找到运行设置</p>\n<img src=\"/2021/11/20/uni-app%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/2020101019472527.png\" class>\n\n<p><img src=\"/2021/11/20/uni-app%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/Users\\爱海\\myblog\\source_posts\\uni-app基本使用\\2020101019472527.png\"></p>\n<p>将微信开发者工具安装的目录复制到这里</p>\n<p>小程序的AppID的配置需要登陆小程序管理后台，在开发设置中找到AppID</p>\n<img src=\"/2021/11/20/uni-app%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/20201010200154850.png\" class>\n\n<p><img src=\"/2021/11/20/uni-app%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/Users\\爱海\\myblog\\source_posts\\uni-app基本使用\\20201010200154850.png\"></p>\n<p>将复制的AppID粘贴到项目目录下的manifest.json文件中的小程序配置中。</p>\n<p>接下来就可以运行项目了</p>\n<img src=\"/2021/11/20/uni-app%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/20201010200451449.png\" class>\n\n<p><img src=\"/2021/11/20/uni-app%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/Users\\爱海\\myblog\\source_posts\\uni-app基本使用\\20201010200451449.png\"></p>\n<p> 运行以后会自动启动微信开发者工具，如果不能自动启动的话，需要手动启动程序。 </p>\n<p>vuex状态管理</p>\n<p>uni-app 内置了 vuex。但是vuex是不支持持久化存储的，所以需要结合第三方来一起协作。</p>\n<p>默认的模板项目首先是没有node-modules模块依赖的，也就是说你没法进行一些第三方的扩展，所以为了让你的项目更加的灵活性，你需要执行以下命令来搭配一些第三方来更随心所欲的开发项目</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init -y</span><br><span class=\"line\">npm install vuex-persistedstate --save</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"三、为什么使用uni-app\"><a href=\"#三、为什么使用uni-app\" class=\"headerlink\" title=\"三、为什么使用uni-app\"></a>三、为什么使用uni-app</h1><p><strong>小程序原生开发有不少槽点：</strong></p>\n<p>​       原生wxml开发对Node、预编译器、webpack支持不好，影响开发效率和工程构建流程。所以大公司都会用框架开发。</p>\n<p>​      微信定义的这套语法，wxml、wxs，以及wx:if等语法，私有化太强。不如正经学vue，学会了全端通用，而不是只为微信小程序。</p>\n<p>vue生态里有太多周边工具，可以提高开发效率，比如ide、校验器、三方库。。。而微信的开发者工具和专业编辑器相比实在不好用，个性化设置也非常少。</p>\n<p>​        而使用<code>uni-app</code>框架开发，在功能上和原生小程序开发没有区别，不会有任何限制。 </p>\n<p>uni-app不会导致性能下载，甚至对很多环节做了自动优化，很多场景下性能体验比微信原生开发更好。</p>\n<p>类似使用vue.js开发web，不但不会造成性能比原生js差，反而由于虚拟dom和差量更新技术的运用，在大多数场景下，比开发者手动写代码操作dom的性能还好。</p>\n<p>小程序中需要频繁的写setData代码来更新数据，这里很重要的就是差量数据更新。如果不做差量，代码性能不好，如果每处逻辑都判断差量数据更新，那代码写起来太麻烦了。</p>\n<p>使用uni-app，底层自动差量数据更新，简单而高性能。</p>\n<p><strong>对比：</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\"><strong>uni-app</strong></th>\n<th align=\"center\">微信</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">功能</td>\n<td align=\"center\">相同</td>\n<td align=\"center\">相同</td>\n</tr>\n<tr>\n<td align=\"center\">性能</td>\n<td align=\"center\">常规场景更优</td>\n<td align=\"center\">需要自己编写复杂代码才能提高性能</td>\n</tr>\n<tr>\n<td align=\"center\">社区生态</td>\n<td align=\"center\">丰富，更多高性能组件</td>\n<td align=\"center\">丰富</td>\n</tr>\n<tr>\n<td align=\"center\">开发体验</td>\n<td align=\"center\">纯vue体验，高效、统一；工程化能力强</td>\n<td align=\"center\">语法私有化；工程化能力弱</td>\n</tr>\n<tr>\n<td align=\"center\">多端能力</td>\n<td align=\"center\">同时支持H5、多家小程序、跨平台App</td>\n<td align=\"center\">只能用于微信小程序</td>\n</tr>\n</tbody></table>\n","text":"一、uni-app初识uni-app 是一个使用 Vue.js 开发所有前端应用的框架，开发者编写一套代码，可发布到iOS、Android、H5、以及各种小程序（微信/支付宝/百度/头条/QQ/钉钉）等多个平台。即使不跨端，uni-app同时也是更好的小程序开发框架。具有vue和","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"uni-app 微信小程序","slug":"uni-app-微信小程序","count":1,"path":"api/tags/uni-app-微信小程序.json"}]},{"title":"微信小程序登录授权及获取用户信息API详解","slug":"微信小程序登录","date":"2020-11-19T14:30:35.000Z","updated":"2022-02-14T11:06:36.154Z","comments":true,"path":"api/articles/微信小程序登录.json","excerpt":"","keywords":null,"cover":"/2020/11/19/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%99%BB%E5%BD%95/Users\\爱海\\myblog\\source_posts\\微信小程序登录\\20200209154638639.jpg","content":"<p>目录</p>\n<p>[toc] </p>\n<h1 id=\"一、API详解\"><a href=\"#一、API详解\" class=\"headerlink\" title=\"一、API详解\"></a><strong>一、API详解</strong></h1><h2 id=\"1-登录\"><a href=\"#1-登录\" class=\"headerlink\" title=\"1.登录\"></a>1.登录</h2><p>通过wx.login拿到code给后台，接口返回token、openID等参数。有了这些参数我们就可以直接请求那些不需要用户操作便可以读取的接口（比如：列表、详情、视频播放等等）；</p>\n<p> ①wx.login(OBJECT)</p>\n<p>调用接口wx.login() 获取临时登录凭证（code），调用成功后能拿到用户登录凭证（有效期五分钟）。开发者需要在开发者服务器（自己的服务器）后台调用 api，使用 code 换取 openID 和 session_key 等信息。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wx.login(&#123;</span><br><span class=\"line\">    <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(res) </span><br><span class=\"line\">        <span class=\"comment\">//&#123;errMsg: &quot;login:ok&quot;, code: &quot;081ckzKc1nYWou0wkHLc19pDKc1ckzKR&quot;&#125;</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (res.code) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 发起网络请求，用于用户登录</span></span><br><span class=\"line\">            wx.request(&#123;</span><br><span class=\"line\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;https://test.com/onLogin&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">code</span>: res.code</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;登录失败！&#x27;</span> + res.errMsg)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>②wx.checkSession(OBJECT)</p>\n<p>校验用户当前session_key是否有效。</p>\n<p>wx.login()调用时，用户的session_key会被更新而致使旧session_key失效。<br>微信不会把session_key的有效期告知开发者。<br>开发者在session_key失效时，可以通过重新执行登录流程获取有效的session_key。<br>当开发者在实现自定义登录态时，可以考虑以session_key有效期作为自身登录态有效期，也可以实现自定义的时效性策略。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wx.checkSession(&#123;</span><br><span class=\"line\">  <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//session_key 未过期，并且在本生命周期一直有效</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">fail</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// session_key 已经失效，需要重新执行登录流程</span></span><br><span class=\"line\">    wx.login() <span class=\"comment\">//重新登录</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>也就是说，每次打开应用时，检测微信session_key是否过期，如果没过期什么都不用做，如果过期了重新登录获取微信session_key。然后获取开发服务器的session，从而达成正真意义上的登录。</p>\n<h2 id=\"2-授权\"><a href=\"#2-授权\" class=\"headerlink\" title=\"2.授权\"></a>2.授权</h2><p>当小程序需要用户操作（比如：关注、评论、添加购物车、地理位置、个人中心等等），就需要用户先授权。</p>\n<p>①wx.authorize(OBJECT)</p>\n<p>提前向用户发起授权请求。调用后会立刻弹窗询问用户是否同意授权小程序使用某项功能或获取用户的某些数据，但不会实际调用对应接口。如果用户之前已经同意授权，则不会出现弹窗，直接返回成功。</p>\n<p>(1)如果用户已授权，可以直接调用接口；</p>\n<p>(2)如果用户未授权，会弹出授权框询问用户：</p>\n<p>a.拒绝授权：关闭授权框，用户操作无效（如关注，无法触发关注的http请求，保持原状）；</p>\n<p>b.接收授权：将用户信息通过token发送给后台，并主动请求用户操作（如关注，接收授权后触发关注的http请求，提示关注成功）。</p>\n<p>scope 为 “scope.userInfo” 时，无法弹出授权窗口。需要用button的方式，文章下面会讲。(小程序后面升级的)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 可以通过 wx.getSetting 先查询一下用户是否授权了 &quot;scope.record&quot; 这个 scope</span></span><br><span class=\"line\">wx.getSetting(&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">success</span>(<span class=\"params\">res</span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!res.authSetting[<span class=\"string\">&#x27;scope.record&#x27;</span>]) &#123;</span><br><span class=\"line\">            wx.authorize(&#123;</span><br><span class=\"line\">                <span class=\"attr\">scope</span>: <span class=\"string\">&#x27;scope.record&#x27;</span>,</span><br><span class=\"line\">                <span class=\"function\"><span class=\"title\">success</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 用户已经同意小程序使用录音功能，后续调用 wx.startRecord 接口不会弹窗询问</span></span><br><span class=\"line\">                    wx.startRecord()</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-用户信息\"><a href=\"#3-用户信息\" class=\"headerlink\" title=\"3.用户信息\"></a>3.用户信息</h2><p><strong>①wx.getUserInfo(OBJECT)</strong></p>\n<p><strong>注意：此接口有调整，使用该接口将不再出现授权弹窗，请使用下面代码来引导用户主动进行授权操作。</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">open-type</span>=<span class=\"string\">&quot;getUserInfo&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>当用户未授权过，调用该接口将直接报错 </li>\n<li>当用户授权过，可以使用该接口获取用户信息</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--wxml--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 如果只是展示用户头像昵称，可以使用 &lt;open-data /&gt; 组件 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">open-data</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;userAvatarUrl&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">open-data</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">open-data</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;userNickName&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">open-data</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 需要使用 button 来授权登录 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">wx:if</span>=<span class=\"string\">&quot;&#123;&#123;canIUse&#125;&#125;&quot;</span> <span class=\"attr\">open-type</span>=<span class=\"string\">&quot;getUserInfo&quot;</span> <span class=\"attr\">bindgetuserinfo</span>=<span class=\"string\">&quot;bindGetUserInfo&quot;</span>&gt;</span>授权登录<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">wx:else</span>&gt;</span>请升级微信版本<span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//js</span></span><br><span class=\"line\">Page(&#123;</span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">canIUse</span>: wx.canIUse(<span class=\"string\">&#x27;button.open-type.getUserInfo&#x27;</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">onLoad</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 查看是否授权</span></span><br><span class=\"line\">    wx.getSetting(&#123;</span><br><span class=\"line\">      <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">res</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">        <span class=\"comment\">// &#123;userInfo: ,rawData: ,signature ,encryptedData ,iv ,&#125;</span></span><br><span class=\"line\">        <span class=\"comment\">// userInfo参数是用户无关隐私的信息</span></span><br><span class=\"line\">        <span class=\"comment\">// encryptedData解密后是用于openId等隐私信息</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (res.authSetting[<span class=\"string\">&#x27;scope.userInfo&#x27;</span>]) &#123;</span><br><span class=\"line\">          <span class=\"comment\">// 已经授权，可以直接调用 getUserInfo 获取头像昵称</span></span><br><span class=\"line\">          wx.getUserInfo(&#123;</span><br><span class=\"line\">            <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">              <span class=\"built_in\">console</span>(res.userInfo)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">bindGetUserInfo</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(e.detail.userInfo)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>②getPhoneNumber(OBJECT)：获取微信用户绑定的手机号，需先调用login接口。因为需要用户主动触发才能发起获取手机号接口，所以该功能不由 API 来调用，需用 <button> 组件的点击来触发。</button></p>\n<p>注意：目前该接口针对【非个人开发者】，且完成了认证的小程序开放。需谨慎使用，若用户举报较多或被发现在不必要场景下使用，微信有权永久回收该小程序的该接口权限。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">open-type</span>=<span class=\"string\">&quot;getPhoneNumber&quot;</span> <span class=\"attr\">bindgetphonenumber</span>=<span class=\"string\">&quot;getPhoneNumber&quot;</span>&gt;</span> <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Page(&#123; </span><br><span class=\"line\">    <span class=\"attr\">getPhoneNumber</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123; </span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(e.detail.errMsg) </span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(e.detail.iv) </span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(e.detail.encryptedData) </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-部分字段解释\"><a href=\"#4-部分字段解释\" class=\"headerlink\" title=\"4.部分字段解释\"></a>4.部分字段解释</h2><p>openID：用户唯一标识。28位。不需要用户同意就能获取到。</p>\n<p>session_key： 会话密钥session_key 是对用户数据进行加密签名的密钥。为了应用自身的数据安全，只在开发服务器和微信服务器中交互，不会发送到前端。</p>\n<p>unionID：用户在开放平台的唯一标识符。如果开发者拥有多个移动应用、网站应用、和公众帐号（包括小程序），可通过unionid来区分用户的唯一性。换句话说，同一用户，对同一个微信开放平台下的不同应用，unionid是相同的。29位。需要用户授权或者已经关注过公众号，具体参考UnionID。</p>\n<h1 id=\"二、登录授权流程\"><a href=\"#二、登录授权流程\" class=\"headerlink\" title=\"二、登录授权流程\"></a>二、登录授权流程</h1><h2 id=\"1-模式概览\"><a href=\"#1-模式概览\" class=\"headerlink\" title=\"1.模式概览\"></a>1.模式概览</h2><p> 整体流程如下图： </p>\n<p><img src=\"/2020/11/19/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%99%BB%E5%BD%95/Users\\爱海\\myblog\\source_posts\\微信小程序登录\\20200209154638639.jpg\"></p>\n<img src=\"/2020/11/19/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%99%BB%E5%BD%95/20200209154638639.jpg\" class>\n\n<h2 id=\"2-主动登录\"><a href=\"#2-主动登录\" class=\"headerlink\" title=\"2.主动登录\"></a>2.主动登录</h2><p>由于APP中有些页面默认需要登录的，如[个人中心]页面，需要登录获取到用户信息，才能继续操作。这样的页面就需要在每次进入页面(<code>onShow</code>)时判断是否授权了。</p>\n<p>profile页面：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onShow () &#123;</span><br><span class=\"line\">    login(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">do</span> something...</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>关于登录授权相关的逻辑都可以封装在<code>handleLogin.js</code>中</p>\n<p>handleLogin.js：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 开始login</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">login</span> (<span class=\"params\">callback</span>) </span>&#123;</span><br><span class=\"line\">  wx.showLoading()</span><br><span class=\"line\">  wx.login(&#123;</span><br><span class=\"line\">    success (res) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (res.code) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 登录成功，获取用户信息</span></span><br><span class=\"line\">        getUserInfo(res.code, callback)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 否则弹窗显示，showToast需要封装</span></span><br><span class=\"line\">        showToast()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    fail () &#123;</span><br><span class=\"line\">      showToast()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 获取用户信息</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getUserInfo</span> (<span class=\"params\">code, callback</span>) </span>&#123;</span><br><span class=\"line\">  wx.getUserInfo(&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 获取成功，全局存储用户信息，开发者服务器登录</span></span><br><span class=\"line\">    success (res) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 全局存储用户信息</span></span><br><span class=\"line\">      store.commit(<span class=\"string\">&#x27;storeUpdateWxUser&#x27;</span>, res.userInfo)</span><br><span class=\"line\">      postLogin(code, res.iv, res.encryptedData, callback)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 获取失败，弹窗提示一键登录</span></span><br><span class=\"line\">    fail () &#123;</span><br><span class=\"line\">      wx.hideLoading()</span><br><span class=\"line\">      <span class=\"comment\">// 获取用户信息失败，清楚全局存储的登录状态，弹窗提示一键登录</span></span><br><span class=\"line\">      <span class=\"comment\">// 使用token管理登录态的，清楚存储全局的token</span></span><br><span class=\"line\">      <span class=\"comment\">// 使用cookie管理登录态的，可以清楚全局登录状态管理的变量</span></span><br><span class=\"line\">      store.commit(<span class=\"string\">&#x27;storeUpdateToken&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">      <span class=\"comment\">// 获取不到用户信息，说明用户没有授权或者取消授权。弹窗提示一键登录，后续会讲</span></span><br><span class=\"line\">      showLoginModal()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 开发者服务端登录</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">postLogin</span> (<span class=\"params\">code, iv, encryptedData, callback</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> params = &#123;</span><br><span class=\"line\">    <span class=\"attr\">code</span>: code,</span><br><span class=\"line\">    <span class=\"attr\">iv</span>: iv,</span><br><span class=\"line\">    <span class=\"attr\">encryptedData</span>: encryptedData</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  request(apiUrl.postLogin, params, <span class=\"string\">&#x27;post&#x27;</span>).then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (res.code == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      wx.hideLoading()</span><br><span class=\"line\">      <span class=\"comment\">// 登录成功，</span></span><br><span class=\"line\">      <span class=\"comment\">// 使用token管理登录态的，存储全局token，用于当做登录态判断，</span></span><br><span class=\"line\">      <span class=\"comment\">// 使用cookie管理登录态的，可以存任意变量当做已登录状态</span></span><br><span class=\"line\">      store.commit(<span class=\"string\">&#x27;storeUpdateToken&#x27;</span>, res.data.token)</span><br><span class=\"line\">      callback &amp;&amp; callback()</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      showToast()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;).catch(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    showToast()</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 显示toast弹窗</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showToast</span> (<span class=\"params\">content = <span class=\"string\">&#x27;登录失败，请稍后再试&#x27;</span></span>) </span>&#123;</span><br><span class=\"line\">  wx.showToast(&#123;</span><br><span class=\"line\">    <span class=\"attr\">title</span>: content,</span><br><span class=\"line\">    <span class=\"attr\">icon</span>: <span class=\"string\">&#x27;none&#x27;</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>到此为止，登录就算完成了。不管使用token还是cookie都可以，都能有正常的登录态了，可以执行后续操作。</p>\n<p>整个流程是 <code>wx.login</code> =&gt; <code>wx.getUserInfo</code> =&gt; 开发者服务器登录<code>postLogin</code>。</p>\n<h2 id=\"3-调用接口\"><a href=\"#3-调用接口\" class=\"headerlink\" title=\"3.调用接口\"></a>3.调用接口</h2><p>某些页面默认不需要登录，但某些用户操作事件是需要登录状态的，所以一者可以判断全局存储的登录状态管理的变量，如果为false，那么直接可以弹窗提示需要一键登录。二者如果全局状态为true，则调用接口看接口返回的code是否是未登录状态（此情况一般来说是登录态过期），未登录的话也弹窗提示需要一键登录。</p>\n<p>某页面（需登录的用户操作）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getPlayer () &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 判断全局是否有登录状态，如果没有直接弹窗提示一键登录</span></span><br><span class=\"line\">    isLogin(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> params = &#123;</span><br><span class=\"line\">            <span class=\"attr\">token</span>: <span class=\"built_in\">this</span>.token</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        request(apiUrl.getPlayer, params).then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// <span class=\"doctag\">TODO:</span> 删除打印</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (res.code === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                store.commit(<span class=\"string\">&#x27;storeUpdateUser&#x27;</span>, res.data.player_info)</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 获取失败了，如果是code是未登录，则去登录，然后执行回调函数this.getPlayer</span></span><br><span class=\"line\">                <span class=\"comment\">// 如果code不是未登录，直接弹窗报错误信息</span></span><br><span class=\"line\">                handleError(res, <span class=\"built_in\">this</span>.getPlayer)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;).catch(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            handleError(err)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p> handleLogin.js </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 判断是否登录</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isLogin</span> (<span class=\"params\">callback</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> token = store.state.token</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (token) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果有全局存储的登录态，暂时认为他是登录状态</span></span><br><span class=\"line\">    callback &amp;&amp; callback()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果没有登录态，弹窗提示一键登录</span></span><br><span class=\"line\">    showLoginModal()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 接口调用失败处理，</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleError</span> (<span class=\"params\">res, callback</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 规定-3041和-3042分别代表未登录和登录态失效</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (res.code == -<span class=\"number\">3041</span> || res.code == -<span class=\"number\">3042</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 弹窗提示一键登录</span></span><br><span class=\"line\">    showLoginModal()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (res.msg) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 弹窗显示错误信息</span></span><br><span class=\"line\">    showToast(res.msg)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p> 到此为止，需要登录的用户操作就可以处理了。如果全局登录状态变量为<code>true</code>，先去调用接口，根据返回的信息是否是未登录再处理。 </p>\n<h2 id=\"4-弹窗提示\"><a href=\"#4-弹窗提示\" class=\"headerlink\" title=\"4.弹窗提示\"></a>4.弹窗提示</h2><p>由于微信小程序授权的接口<code>wx.getUserInfo</code>和<code>wx.authorize</code>中scope 为 “scope.userInfo” ，新版中调用这两个API是不会主动触发弹出授权窗口的。需要使用如下方式：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">open-type</span>=<span class=\"string\">&quot;getUserInfo&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>上面代码中多处出现的<code>showLoginModal</code>是用于显示一键登录的。如下：</p>\n<p>handleLogin.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 显示一键登录的弹窗</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showLoginModal</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  wx.showModal(&#123;</span><br><span class=\"line\">    <span class=\"attr\">title</span>: <span class=\"string\">&#x27;提示&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">content</span>: <span class=\"string\">&#x27;你还未登录，登录后可获得完整体验 &#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">confirmText</span>: <span class=\"string\">&#x27;一键登录&#x27;</span>,</span><br><span class=\"line\">    success (res) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 点击一键登录，去授权页面</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (res.confirm) &#123;</span><br><span class=\"line\">        wx.navigateTo(&#123;</span><br><span class=\"line\">          <span class=\"attr\">url</span>: <span class=\"string\">&#x27;授权登录页面地址&#x27;</span>,</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p> 关于授权登录，我们做了一个专门的页面处理，此处的<code>button</code>为: </p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;canIUse&quot;</span> <span class=\"attr\">open-type</span>=<span class=\"string\">&quot;getUserInfo&quot;</span> @<span class=\"attr\">getuserinfo</span>=<span class=\"string\">&quot;getUserInfo&quot;</span>&gt;</span>微信登录<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span>。</span><br></pre></td></tr></table></figure>\n\n<p> 如下图： </p>\n<p><img src=\"/2020/11/19/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%99%BB%E5%BD%95/Users\\爱海\\myblog\\source_posts\\微信小程序登录\\20200209160500161.png\"></p>\n<img src=\"/2020/11/19/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%99%BB%E5%BD%95/20200209160500161.png\" class>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getUserInfo (e) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (e.target.userInfo) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 点击Button弹窗授权，如果授权了，执行login</span></span><br><span class=\"line\">        <span class=\"comment\">// 因为Login流程中有wx.getUserInfo，此时就可以获取到了</span></span><br><span class=\"line\">        login(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 登录成功后，返回</span></span><br><span class=\"line\">            wx.navigateBack()</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>到此为止，整个授权和登录流程就算走完了。可以再回过头梳理一下最开始的流程图，应该就能理清整个逻辑了。</p>\n<p>其他具体用法请参考微信小程序<a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/\">官方文档</a>。</p>\n","text":"目录[toc] 一、API详解1.登录通过wx.login拿到code给后台，接口返回token、openID等参数。有了这些参数我们就可以直接请求那些不需要用户操作便可以读取的接口（比如：列表、详情、视频播放等等）； ①wx.login(OBJECT)调用接口wx.login(","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"微信小程序登录","slug":"微信小程序登录","count":1,"path":"api/tags/微信小程序登录.json"}]},{"title":"原生小程序发送请求注意事项","slug":"原生小程序发送请求","date":"2020-10-06T13:28:26.000Z","updated":"2022-02-14T10:42:13.414Z","comments":true,"path":"api/articles/原生小程序发送请求.json","excerpt":"","keywords":null,"cover":"/2020/10/06/%E5%8E%9F%E7%94%9F%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82/Users\\爱海\\myblog\\source\\img\\1569742369137.png","content":"<h1 id=\"原生小程序使用-wx-request请求数据\"><a href=\"#原生小程序使用-wx-request请求数据\" class=\"headerlink\" title=\"原生小程序使用 wx.request请求数据\"></a>原生小程序使用 wx.request请求数据</h1><h2 id=\"小程序端向服务端发送请求有两种方式：\"><a href=\"#小程序端向服务端发送请求有两种方式：\" class=\"headerlink\" title=\"小程序端向服务端发送请求有两种方式：\"></a>小程序端向服务端发送请求有两种方式：</h2><p>（1）小程序端直接向服务端发起请求。</p>\n<p>小程序API中有一个函数：wx.request()，通过这个函数就可以在小程序端直接向后台发起请求；</p>\n<p>（2）通过云函数向服务端发起请求。</p>\n<p>相当于通过小程序的后端向服务器发送请求，这时，可以在小程序中安装第三方库，比如常用的request、got等。</p>\n<p>他们的区别：</p>\n<p>小程序端发送请求：只支持https协议，请求的域名要经过IPC备案才可以，域名个数限制：20个；</p>\n<p>云函数发送请求：支持的协议根据第三方库决定，域名不需要IPC备案也可以发送请求，域名个数无限制。</p>\n<h2 id=\"wx-reques\"><a href=\"#wx-reques\" class=\"headerlink\" title=\"wx.reques()\"></a>wx.reques()</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Page(&#123;</span><br><span class=\"line\">  <span class=\"attr\">data</span>:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">onLoad</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">options</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//小程序中没有跨域问题</span></span><br><span class=\"line\">    wx.request(&#123;</span><br><span class=\"line\">      <span class=\"comment\">//请求地址</span></span><br><span class=\"line\">      <span class=\"attr\">url</span>: <span class=\"string\">&#x27;xxx&#x27;</span>,</span><br><span class=\"line\">      <span class=\"comment\">//请求方式</span></span><br><span class=\"line\">      <span class=\"attr\">method</span>:<span class=\"string\">&quot;get&quot;</span>,</span><br><span class=\"line\">      <span class=\"comment\">//请求参数</span></span><br><span class=\"line\">      <span class=\"attr\">data</span>:&#123;&#125;,</span><br><span class=\"line\">      <span class=\"comment\">//设置请求头</span></span><br><span class=\"line\">      <span class=\"attr\">header</span>: &#123;&#125;,</span><br><span class=\"line\">      <span class=\"comment\">//请求返回结果的数据类型</span></span><br><span class=\"line\">      <span class=\"attr\">dataType</span>:<span class=\"string\">&quot;json&quot;</span>,</span><br><span class=\"line\">      <span class=\"comment\">//请求回调</span></span><br><span class=\"line\">      <span class=\"attr\">success</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">res</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(res);</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 请求失败执行的回调函数</span></span><br><span class=\"line\">      <span class=\"attr\">fail</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">res</span>) </span>&#123;&#125;,</span><br><span class=\"line\">       <span class=\"comment\">// 接口调用结束的回调函数（调用成功、失败都会执行）</span></span><br><span class=\"line\">       <span class=\"attr\">complete</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">res</span>) </span>&#123;&#125;,</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>详细参考指路：</p>\n<p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/network/request/wx.request.html\">https://developers.weixin.qq.com/miniprogram/dev/api/network/request/wx.request.html</a></p>\n<p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/ability/network.html\">https://developers.weixin.qq.com/miniprogram/dev/framework/ability/network.html</a></p>\n<h3 id=\"踩坑记录\"><a href=\"#踩坑记录\" class=\"headerlink\" title=\"踩坑记录\"></a>踩坑记录<img src=\"/2020/10/06/%E5%8E%9F%E7%94%9F%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82/Users\\爱海\\myblog\\source\\img\\1569742369137.png\"></h3><img src=\"/2020/10/06/%E5%8E%9F%E7%94%9F%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82/1569742369137.png\" class>\n\n<h3 id=\"发现报错，原因是微信小程序中发请求得先在小程序后台配置合法的域名请求列表。\"><a href=\"#发现报错，原因是微信小程序中发请求得先在小程序后台配置合法的域名请求列表。\" class=\"headerlink\" title=\"发现报错，原因是微信小程序中发请求得先在小程序后台配置合法的域名请求列表。\"></a>发现报错，原因是微信小程序中发请求得先在小程序后台配置合法的域名请求列表。</h3><p><img src=\"/2020/10/06/%E5%8E%9F%E7%94%9F%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82/Users\\爱海\\myblog\\source\\img\\1569742448980.png\"></p>\n<img src=\"/2020/10/06/%E5%8E%9F%E7%94%9F%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82/1569742448980.png\" class>\n\n<img src=\"/2020/10/06/%E5%8E%9F%E7%94%9F%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82/1569742508228.png\" class>\n\n\n\n<p><img src=\"/2020/10/06/%E5%8E%9F%E7%94%9F%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82/Users\\爱海\\myblog\\source\\img\\1569742508228.png\"></p>\n<p>此时发现可以正常请求网络了。</p>\n<p>需要注意的是：</p>\n<h3 id=\"小程序在线上的版本都是需要使用https的请求-同时只能请求到自己在微信公众号中配置好的https服务器。不过在开发环境中-在电脑上的微信web开具中的-详情底下的不进行https校验打上勾即可发送http请求-也使用小程序request的api进行发送\"><a href=\"#小程序在线上的版本都是需要使用https的请求-同时只能请求到自己在微信公众号中配置好的https服务器。不过在开发环境中-在电脑上的微信web开具中的-详情底下的不进行https校验打上勾即可发送http请求-也使用小程序request的api进行发送\" class=\"headerlink\" title=\"小程序在线上的版本都是需要使用https的请求,同时只能请求到自己在微信公众号中配置好的https服务器。不过在开发环境中,在电脑上的微信web开具中的 详情底下的不进行https校验打上勾即可发送http请求,也使用小程序request的api进行发送.\"></a>小程序在线上的版本都是需要使用https的请求,同时只能请求到自己在微信公众号中配置好的https服务器。不过在开发环境中,在电脑上的微信web开具中的 详情底下的不进行https校验打上勾即可发送http请求,也使用小程序request的api进行发送.</h3><p><img src=\"/2020/10/06/%E5%8E%9F%E7%94%9F%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82/Users\\爱海\\myblog\\source\\img\\1569742566195.png\"></p>\n<img src=\"/2020/10/06/%E5%8E%9F%E7%94%9F%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82/1569742566195.png\" class>\n\n<h2 id=\"代码封装\"><a href=\"#代码封装\" class=\"headerlink\" title=\"代码封装\"></a>代码封装</h2><p>在使用wx.request时我们可以通过封装一个请求函数来简化代码，这样可以使代码更加简洁方便</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//utils/http.js</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">requestGet</span>(<span class=\"params\">url, data</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">reslove, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\twx.request(&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//请求地址</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">url</span>: url,</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//请求方式</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">method</span>: <span class=\"string\">&quot;get&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//请求参数</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">data</span>: data,</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//设置请求头  如果发送的是post请求，一定要添加请求的content-type</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">header</span>: &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"string\">&quot;content-type&quot;</span>: <span class=\"string\">&quot;application/json&quot;</span></span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//请求返回结果的数据类型</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">dataType</span>: <span class=\"string\">&quot;json&quot;</span>,</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//请求回调</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">success</span>: <span class=\"function\">(<span class=\"params\">&#123; statusCode, data &#125;</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\treslove(data);</span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\treject(<span class=\"string\">&quot;服务器响应出错&quot;</span>);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 请求失败执行的回调函数</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">fail</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">\t\t\t\treject(err);</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 接口调用结束的回调函数（调用成功、失败都会执行）</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">complete</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//然后导出请求url,例如</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">var</span> getURL = <span class=\"string\">&quot;https://m.lrts.me/ajax/getBookMenu/&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//pages/index/index.js</span></span><br><span class=\"line\"><span class=\"comment\">//在页面中使用：</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; requestGet, getURL &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;../../utils/reqeust&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> result = <span class=\"keyword\">await</span> requestGet(getURL);</span><br><span class=\"line\"><span class=\"comment\">//result就是我们发送请求获取的结果</span></span><br></pre></td></tr></table></figure>\n\n","text":"原生小程序使用 wx.request请求数据小程序端向服务端发送请求有两种方式：（1）小程序端直接向服务端发起请求。小程序API中有一个函数：wx.request()，通过这个函数就可以在小程序端直接向后台发起请求；（2）通过云函数向服务端发起请求。相当于通过小程序的后端向服务器","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"原生小程序，wx.request，微信开发者工具","slug":"原生小程序，wx-request，微信开发者工具","count":1,"path":"api/tags/原生小程序，wx-request，微信开发者工具.json"}]},{"title":"小程序页面层数据、事件","slug":"小程序页面层数据、事件","date":"2020-10-04T11:24:15.000Z","updated":"2022-02-14T11:49:48.892Z","comments":true,"path":"api/articles/小程序页面层数据、事件.json","excerpt":"","keywords":null,"cover":"/2020/10/04/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B5%E9%9D%A2%E5%B1%82%E6%95%B0%E6%8D%AE%E3%80%81%E4%BA%8B%E4%BB%B6/Users\\爱海\\myblog\\source_posts\\小程序页面层数据、事件\\1569379659990.png","content":"<p>目录</p>\n<p>[toc]</p>\n<h1 id=\"1-页面层数据绑定\"><a href=\"#1-页面层数据绑定\" class=\"headerlink\" title=\"1.页面层数据绑定\"></a>1.页面层数据绑定</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Page(&#123;</span><br><span class=\"line\">   <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">text</span>: <span class=\"string\">&quot;This is page data.&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">classname</span>:<span class=\"string\">&quot;hello&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">&quot;xiaoming&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">id</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"attr\">flag</span>:<span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;text&gt;&#123;&#123;text&#125;&#125;&lt;/text&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;&#123;&#123;classname&#125;&#125;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span>&gt;</span>&#123;&#123;&#x27;abc&#x27;&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span>&gt;</span>&#123;&#123;111&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span>&gt;</span>&#123;&#123;111*999&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span>&gt;</span>&#123;&#123;&quot;hello&quot; + name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span>&gt;</span>&#123;&#123;flag?&quot;真的&quot;:&quot;假的&quot;&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\">&lt;checkbox checked=&quot;&#123;&#123;false&#125;&#125;&quot;&gt;  //这边不能直接&lt;checkbox checked=&quot;false&quot;&gt;，因为js中只要不是非空字符串，他的值都是true，我们可以通过mustache插值表达式解决该问题</span><br><span class=\"line\">&lt;view id=&quot;item-&#123;&#123;id&#125;&#125;&quot;&gt; &lt;/view&gt;</span><br><span class=\"line\">&lt;view hidden=&quot;&#123;&#123;flag ? true : false&#125;&#125;&quot;&gt; Hidden &lt;/view&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">.hello&#123;</span><br><span class=\"line\">  width: 100px;</span><br><span class=\"line\">  height: 100px;</span><br><span class=\"line\">  background: red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"2-wxs语法\"><a href=\"#2-wxs语法\" class=\"headerlink\" title=\"2.wxs语法\"></a>2.wxs语法</h1><p>WXS（WeiXin Script）是小程序的一套脚本语言，结合 <code>WXML</code>，可以构建出页面的结构。</p>\n<p>WXS存在的意义就是充当computed/filter这类功能。wxs不支持es6语法。</p>\n<p>WXS 与 JavaScript 是不同的语言，有自己的语法，并不和 JavaScript 一致。</p>\n<p>WXS 代码可以编写在 wxml 文件中的 <code>&lt;wxs&gt;</code> 标签内，或以 <code>.wxs</code> 为后缀名的文件内。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 声明一个wxs模块 : 不支持es6</span><br><span class=\"line\">    需要指定模块的名字 <span class=\"built_in\">module</span> --&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">wxs</span> <span class=\"attr\">module</span>=<span class=\"string\">&quot;dateFormat&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  //准备一个时间格式化的方法</span></span><br><span class=\"line\"><span class=\"xml\">  var format = function(date)&#123;</span></span><br><span class=\"line\"><span class=\"xml\">      //根据时间戳使用小程序提供的getDate()方法得到一个时间</span></span><br><span class=\"line\"><span class=\"xml\">      var time = getDate(date);</span></span><br><span class=\"line\"><span class=\"xml\">      var year = time.getFullYear();</span></span><br><span class=\"line\"><span class=\"xml\">      var month = time.getMonth() + 1;</span></span><br><span class=\"line\"><span class=\"xml\">      var date = time.getDate();</span></span><br><span class=\"line\"><span class=\"xml\">      var hour = time.getHours();</span></span><br><span class=\"line\"><span class=\"xml\">      var minute = time.getMinutes();</span></span><br><span class=\"line\"><span class=\"xml\">      var second = time.getSeconds();</span></span><br><span class=\"line\"><span class=\"xml\">      month = month &lt; 10 ? &quot;0&quot; + month : month;</span></span><br><span class=\"line\"><span class=\"xml\">      date = date &lt; 10 ? &quot;0&quot; + date : date;</span></span><br><span class=\"line\"><span class=\"xml\">      hour = hour &lt; 10 ? &quot;0&quot; + hour : hour;</span></span><br><span class=\"line\"><span class=\"xml\">      minute = minute &lt; 10 ? &quot;0&quot; + minute : minute;</span></span><br><span class=\"line\"><span class=\"xml\">      second = second &lt; 10 ? &quot;0&quot; + second : second;</span></span><br><span class=\"line\"><span class=\"xml\">      return year + &quot;-&quot; + month + &quot;-&quot; + date + &quot; &quot; + hour + &quot;:&quot; + minute + &quot;:&quot; + second;</span></span><br><span class=\"line\"><span class=\"xml\">  &#125;;</span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">  var format2 = function(msg)&#123;</span></span><br><span class=\"line\"><span class=\"xml\">    var reg = getRegExp(&#x27;小&#x27;, &quot;g&quot;);</span></span><br><span class=\"line\"><span class=\"xml\">    return msg.replace(reg, &quot;大&quot;);</span></span><br><span class=\"line\"><span class=\"xml\">  &#125;</span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">  var msg = &quot;hello world&quot;;</span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">  //将外部需要使用的信息导出</span></span><br><span class=\"line\"><span class=\"xml\">  module.exports = &#123;</span></span><br><span class=\"line\"><span class=\"xml\">    format : format,</span></span><br><span class=\"line\"><span class=\"xml\">    format2:format2</span></span><br><span class=\"line\"><span class=\"xml\">    msg:msg</span></span><br><span class=\"line\"><span class=\"xml\">  &#125;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">wxs</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span>&#123;&#123;dateFormat.format(now)&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span>&#123;&#123;dateFormat.format2(&quot;小小的&quot;)&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span>&#123;&#123;dateFormat.msg&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"3-wxml语法\"><a href=\"#3-wxml语法\" class=\"headerlink\" title=\"3.wxml语法\"></a>3.wxml语法</h1><h2 id=\"3-1-1列表渲染\"><a href=\"#3-1-1列表渲染\" class=\"headerlink\" title=\"3.1.1列表渲染\"></a>3.1.1列表渲染</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data: &#123;</span><br><span class=\"line\">    <span class=\"attr\">text</span>: <span class=\"string\">&quot;This is page data.&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">classname</span>:<span class=\"string\">&quot;hello&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">todos</span>:[</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>:<span class=\"string\">&quot;javascript&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">completed</span>:<span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&quot;java&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">completed</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&quot;c#&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">completed</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\">&lt;!--</span><br><span class=\"line\">  wx:<span class=\"keyword\">for</span>-item=<span class=\"string\">&quot;ele&quot;</span>  给遍历的每一项取别名，默认名字是item</span><br><span class=\"line\">  <span class=\"attr\">wx</span>:<span class=\"keyword\">for</span>-index=<span class=\"string\">&quot;idx&quot;</span>  给遍历的每一项序号取别名，默认是index</span><br><span class=\"line\">  --&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">wx:for</span>=<span class=\"string\">&quot;&#123;&#123;todos&#125;&#125;&quot;</span> <span class=\"attr\">wx:for-item</span>=<span class=\"string\">&quot;ele&quot;</span> <span class=\"attr\">wx:for-index</span>=<span class=\"string\">&quot;idx&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">     <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span>&#123;&#123;idx&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">     <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span>&#123;&#123;ele.name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">     <span class=\"tag\">&lt;<span class=\"name\">checkbox</span> <span class=\"attr\">checked</span>=<span class=\"string\">&quot;&#123;&#123;ele.completed&#125;&#125;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">checkbox</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p><strong>wx:key   提高列表渲染时排序的效率</strong></p>\n<p><code>wx:key</code> 的值以两种形式提供</p>\n<ol>\n<li><p>字符串，代表在 for 循环的 array 中 item 的某个 property，该 property 的值需要是列表中唯一的字符串或数字，且不能动态改变。</p>\n</li>\n<li><p>保留关键字 <code>*this</code> 代表在 for 循环中的 item 本身，这种表示需要 item 本身是一个唯一的字符串或者数字。比如数组[“a”,”b”,”c”]这样的数组就可以wx:key = “*this”</p>\n</li>\n</ol>\n<h2 id=\"3-1-2条件渲染\"><a href=\"#3-1-2条件渲染\" class=\"headerlink\" title=\"3.1.2条件渲染\"></a>3.1.2条件渲染</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--wxml--&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">wx:if</span>=<span class=\"string\">&quot;&#123;&#123;view == &#x27;WEBVIEW&#x27;&#125;&#125;&quot;</span>&gt;</span> WEBVIEW <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">wx:elif</span>=<span class=\"string\">&quot;&#123;&#123;view == &#x27;APP&#x27;&#125;&#125;&quot;</span>&gt;</span> APP <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">wx:else</span>=<span class=\"string\">&quot;&#123;&#123;view == &#x27;MINA&#x27;&#125;&#125;&quot;</span>&gt;</span> MINA <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// page.js</span></span><br><span class=\"line\">Page(&#123;</span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">view</span>: <span class=\"string\">&#x27;MINA&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--条件渲染和<span class=\"keyword\">for</span>循环结合使用--&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">wx:for</span>=<span class=\"string\">&quot;&#123;&#123;[1,2,3,4,5,6,7,8,9]&#125;&#125;&quot;</span>  <span class=\"attr\">wx:for-item</span>=<span class=\"string\">&quot;i&quot;</span> &gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">wx:for</span>=<span class=\"string\">&quot;&#123;&#123;[1,2,3,4,5,6,7,8,9]&#125;&#125;&quot;</span>  <span class=\"attr\">wx:for-item</span>=<span class=\"string\">&quot;j&quot;</span> &gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">      <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">wx:if</span>=<span class=\"string\">&quot;&#123;&#123;i&lt;=j&#125;&#125;&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">         &#123;&#123;i&#125;&#125;*&#123;&#123;j&#125;&#125;=&#123;&#123;i*j&#125;&#125;</span></span><br><span class=\"line\"><span class=\"xml\">      <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--block标签的使用--&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">block</span> <span class=\"attr\">wx:if</span>=<span class=\"string\">&quot;&#123;&#123;show&#125;&#125;&quot;</span>&gt;</span> </span></span><br><span class=\"line\"><span class=\"xml\">   <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">      <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span>内容<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">   <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">   <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">      <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span>内容<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">   <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">block</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//block区块标签，不会渲染到页面。当有多个view要切换显示隐藏的时候，可以把多个view嵌套到block标签中</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--hidden属性和wx:if的区别--&gt;</span><br><span class=\"line\"> &lt;view class=&quot;content&quot;   wx:if=&quot;&#123;&#123;show&#125;&#125;&quot;&gt;</span><br><span class=\"line\">      &lt;text&gt;内容&lt;/text&gt;</span><br><span class=\"line\"> &lt;/view&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"> &lt;view class=&quot;content&quot;   hidden=&quot;&#123;&#123;!show&#125;&#125;&quot;&gt;</span><br><span class=\"line\">      &lt;text&gt;内容&lt;/text&gt;</span><br><span class=\"line\"> &lt;/view&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>wx:if 如果条件未false，则元素不会渲染到页面<br>hidden: 如果条件为true，则元素会渲染到页面，只不过添加了display:none的属性让元素不显示<br>频繁切换隐藏显示用hidden，不频繁切换用:if</p>\n<h2 id=\"3-1-3模板语法\"><a href=\"#3-1-3模板语法\" class=\"headerlink\" title=\"3.1.3模板语法\"></a>3.1.3模板语法</h2><p>WXML提供模板（template），可以在模板中定义代码片段，然后在不同的地方调用。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--声明一个名字叫staffName的模板 --&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;staffName&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    FirstName: &#123;&#123;firstName&#125;&#125;, LastName: &#123;&#123;lastName&#125;&#125;</span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!--使用模板，并且向模板传递参数--&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">is</span>=<span class=\"string\">&quot;staffName&quot;</span> <span class=\"attr\">data</span>=<span class=\"string\">&quot;&#123;&#123;...staffA&#125;&#125;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">is</span>=<span class=\"string\">&quot;staffName&quot;</span> <span class=\"attr\">data</span>=<span class=\"string\">&quot;&#123;&#123;...staffB&#125;&#125;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">is</span>=<span class=\"string\">&quot;staffName&quot;</span> <span class=\"attr\">data</span>=<span class=\"string\">&quot;&#123;&#123;...staffC&#125;&#125;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// page.js</span></span><br><span class=\"line\">Page(&#123;</span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">staffA</span>: &#123;<span class=\"attr\">firstName</span>: <span class=\"string\">&#x27;Hulk&#x27;</span>, <span class=\"attr\">lastName</span>: <span class=\"string\">&#x27;Hu&#x27;</span>&#125;,</span><br><span class=\"line\">    <span class=\"attr\">staffB</span>: &#123;<span class=\"attr\">firstName</span>: <span class=\"string\">&#x27;Shang&#x27;</span>, <span class=\"attr\">lastName</span>: <span class=\"string\">&#x27;You&#x27;</span>&#125;,</span><br><span class=\"line\">    <span class=\"attr\">staffC</span>: &#123;<span class=\"attr\">firstName</span>: <span class=\"string\">&#x27;Gideon&#x27;</span>, <span class=\"attr\">lastName</span>: <span class=\"string\">&#x27;Lin&#x27;</span>&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-1-4import-和-include\"><a href=\"#3-1-4import-和-include\" class=\"headerlink\" title=\"3.1.4import 和 include\"></a>3.1.4import 和 include</h2><p><code>&lt;import src=&quot;a.wxml&quot;/&gt; </code>  作用可以引入目标文件中定义的template，然后在当前的wxml中使用template。注意点不能使用引入目标文件中所引入的第三方的template，比如A import B,B import C，A可以使用B中声明的template，但是A不可以使用C中声明的template</p>\n<p><code>&lt;include src=&quot;header.wxml&quot;/&gt; </code>作用可以引入目标文件中除了template wxs之外的所有代码</p>\n<h1 id=\"4-尺寸单位和样式\"><a href=\"#4-尺寸单位和样式\" class=\"headerlink\" title=\"4.尺寸单位和样式\"></a>4.尺寸单位和样式</h1><p>   与 CSS 相比，WXSS 扩展的特性有： </p>\n<ul>\n<li>尺寸单位(rpx  rem)</li>\n<li>样式导入</li>\n</ul>\n<h2 id=\"4-1尺寸单位\"><a href=\"#4-1尺寸单位\" class=\"headerlink\" title=\"4.1尺寸单位\"></a>4.1尺寸单位</h2><p>rpx（responsive pixel）: 可以根据屏幕宽度进行自适应。规定屏幕宽为750rpx。如在 iPhone6 上，屏幕宽度为375px，共有750个物理像素，则750rpx = 375px = 750物理像素，1rpx = 0.5px = 1物理像素。</p>\n<blockquote>\n<p>当设定了容器的width:750rpx之后，那么在所有的设备上宽度都是屏幕100%，微信小程序会自动帮我们做单位换算</p>\n</blockquote>\n<p><img src=\"/2020/10/04/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B5%E9%9D%A2%E5%B1%82%E6%95%B0%E6%8D%AE%E3%80%81%E4%BA%8B%E4%BB%B6/Users\\爱海\\myblog\\source_posts\\小程序页面层数据、事件\\1569379659990.png\"></p>\n<img src=\"/2020/10/04/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B5%E9%9D%A2%E5%B1%82%E6%95%B0%E6%8D%AE%E3%80%81%E4%BA%8B%E4%BB%B6/1569379659990.png\" class>\n\n<blockquote>\n<pre><code>    **建议：** 开发微信小程序时设计师可以用 iPhone6 作为视觉稿的标准\n</code></pre>\n</blockquote>\n<ul>\n<li>vw和vh是css3中的新单位，是一种视窗单位，在小程序中也同样适用。</li>\n</ul>\n<blockquote>\n<p>小程序中，窗口宽度固定为100vw，将窗口宽度平均分成100份，1份是1vw</p>\n<p>小程序中，窗口高度固定为100vh ，将窗口高度平均分成100份，1份是1vh</p>\n</blockquote>\n<h2 id=\"4-2样式导入\"><a href=\"#4-2样式导入\" class=\"headerlink\" title=\"4.2样式导入\"></a>4.2样式导入</h2><p>使用<code>@import</code>语句可以导入外联样式表，<code>@import</code>后跟需要导入的外联样式表的相对路径，用<code>;</code>表示语句结束。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** common.wxss **/</span></span><br><span class=\"line\">.small-p &#123;</span><br><span class=\"line\">  <span class=\"attr\">padding</span>:5px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** app.wxss **/</span></span><br><span class=\"line\">@<span class=\"keyword\">import</span> <span class=\"string\">&quot;common.wxss&quot;</span>;</span><br><span class=\"line\">.middle-p &#123;</span><br><span class=\"line\">  <span class=\"attr\">padding</span>:15px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">.box2&#123;</span><br><span class=\"line\">    <span class=\"attr\">border</span>: 1px solid red;</span><br><span class=\"line\">    width: 600rpx;</span><br><span class=\"line\">    height: 600rpx;</span><br><span class=\"line\">    <span class=\"comment\">/*background-image可以指定网络图片，但是不可以指定本地图片*/</span></span><br><span class=\"line\">    background-image: url(<span class=\"string\">&quot;https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1586254613140&amp;di=33474e16f9fc5342f7a1e2be72f287f6&amp;imgtype=0&amp;src=http%3A%2F%2Fdmimg.5054399.com%2Fallimg%2Fpkm%2Fpk%2F22.jpg&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">/* background-image: url(../../icons/timg.jpg); */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-3-选择器\"><a href=\"#4-3-选择器\" class=\"headerlink\" title=\"4.3 选择器\"></a>4.3 选择器</h2><p>特别需要注意的是小程序 不支持通配符 * ，因此以下代码无效！</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*&#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>:<span class=\"number\">0</span>;   </span><br><span class=\"line\">    <span class=\"attribute\">box-sizing</span>:border-box;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>目前支持的选择器有：</p>\n<p><img src=\"/2020/10/04/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B5%E9%9D%A2%E5%B1%82%E6%95%B0%E6%8D%AE%E3%80%81%E4%BA%8B%E4%BB%B6/Users\\爱海\\myblog\\source_posts\\小程序页面层数据、事件\\1576221022785.png\"></p>\n<img src=\"/2020/10/04/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B5%E9%9D%A2%E5%B1%82%E6%95%B0%E6%8D%AE%E3%80%81%E4%BA%8B%E4%BB%B6/1576221022785.png\" class>\n\n<p><strong>“~”选择器</strong></p>\n<p><strong>“+”选择器</strong></p>\n<p><strong>[attribute]</strong></p>\n<h2 id=\"4-4-小程序中使用less\"><a href=\"#4-4-小程序中使用less\" class=\"headerlink\" title=\"4.4 小程序中使用less\"></a>4.4 小程序中使用less</h2><p>原声小程序不支持 less ，其他基于小程序的框架基本都支持，如 wepy ， mpvue ， taro ，uni-app等。<br>但是仅仅因为一个less功能，而去引用框架，肯定是不可取的。因此可以使用以下方式来实现</p>\n<ol>\n<li>编辑器是 vscode</li>\n<li>安装插件 easy less</li>\n<li>在vs code的设置中加如下，配置</li>\n</ol>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;workbench.sideBar.location&quot;</span>: <span class=\"string\">&quot;left&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;less.compile&quot;</span>: &#123;        </span><br><span class=\"line\">      <span class=\"attr\">&quot;outExt&quot;</span>:<span class=\"string\">&quot;.wxss&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>在要编写样式的地方新建 less 文件，如 index.less ,然后正常编辑即可。</li>\n</ol>\n<p><img src=\"/2020/10/04/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B5%E9%9D%A2%E5%B1%82%E6%95%B0%E6%8D%AE%E3%80%81%E4%BA%8B%E4%BB%B6/Users\\爱海\\myblog\\source_posts\\小程序页面层数据、事件\\1576221707533.png\"></p>\n<img src=\"/2020/10/04/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B5%E9%9D%A2%E5%B1%82%E6%95%B0%E6%8D%AE%E3%80%81%E4%BA%8B%E4%BB%B6/1576221707533.png\" class>\n\n<h1 id=\"5-事件\"><a href=\"#5-事件\" class=\"headerlink\" title=\"5.事件\"></a>5.事件</h1><h2 id=\"5-1-事件绑定\"><a href=\"#5-1-事件绑定\" class=\"headerlink\" title=\"5.1 事件绑定\"></a>5.1 事件绑定</h2><ol>\n<li>绑定事件的时候不可以直接通过buttonTapHandle(123)这种方式传参，如果要传递参数，可以通过data-*的方式传参，可以在事件对象中的dataset中查看该参数</li>\n<li>事件处理函数中的this并不是当前触发事件的对象，而是当前的页面对象</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">  &lt;button bindtap=<span class=\"string\">&quot;buttonTapHandle&quot;</span> data-hi=<span class=\"string\">&quot;WeChat&quot;</span> &gt;点我&lt;/button&gt;</span><br><span class=\"line\">  &lt;!--驼峰命名法--&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&quot;buttonTapHandle&quot;</span> <span class=\"attr\">data-hello-world</span>=<span class=\"string\">&quot;WeChat&quot;</span> &gt;</span>点我<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\">   </span><br><span class=\"line\"> </span><br><span class=\"line\">  buttonTapHandle:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;tap事件&quot;</span>,e)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">      </span><br><span class=\"line\">      </span><br><span class=\"line\"><span class=\"comment\">//普通事件函数中this是当前的页面对象</span></span><br><span class=\"line\"><span class=\"comment\">//箭头函数中的this是undefined，如果要在箭头函数中使用当前的页面对象，我们可以在onload方法中把this保持一份 </span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//事件对象e中的信息</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;type&quot;</span>:<span class=\"string\">&quot;tap&quot;</span>,  <span class=\"comment\">//事件类型</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;timeStamp&quot;</span>:<span class=\"number\">895</span>,  <span class=\"comment\">//事件生成时的时间戳</span></span><br><span class=\"line\">  <span class=\"comment\">//触发事件的元素</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;target&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;tapTest&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;dataset&quot;</span>:  &#123;</span><br><span class=\"line\">      <span class=\"attr\">&quot;hi&quot;</span>:<span class=\"string\">&quot;WeChat&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">//绑定事件的元素</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;currentTarget&quot;</span>:  &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;tapTest&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;dataset&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">&quot;hi&quot;</span>:<span class=\"string\">&quot;WeChat&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">//额外的信息</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;detail&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;x&quot;</span>:<span class=\"number\">53</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;y&quot;</span>:<span class=\"number\">14</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">//当前停留在屏幕中的触摸点信息的数组</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;touches&quot;</span>:[&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;identifier&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;pageX&quot;</span>:<span class=\"number\">53</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;pageY&quot;</span>:<span class=\"number\">14</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;clientX&quot;</span>:<span class=\"number\">53</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;clientY&quot;</span>:<span class=\"number\">14</span></span><br><span class=\"line\">  &#125;],</span><br><span class=\"line\">  <span class=\"comment\">//当前变化的触摸点信息的数组</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;changedTouches&quot;</span>:[&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;identifier&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;pageX&quot;</span>:<span class=\"number\">53</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;pageY&quot;</span>:<span class=\"number\">14</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;clientX&quot;</span>:<span class=\"number\">53</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;clientY&quot;</span>:<span class=\"number\">14</span></span><br><span class=\"line\">  &#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注意：绑定事件时不能带参数 不能带括号 以下为错误写法</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">bindinput</span>=<span class=\"string\">&quot;handleInput(100)&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-2-事件冒泡\"><a href=\"#5-2-事件冒泡\" class=\"headerlink\" title=\"5.2 事件冒泡\"></a>5.2 事件冒泡</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--使用bindTap绑定事件，默认会有事件冒泡--&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&quot;outerHandler&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width:200px;height:200px;background-color:red&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&quot;innerHandler&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width:100px;height:100px;background-color:blue&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\">&lt;!--使用catchtap阻止事件冒泡--&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">catchtap</span>=<span class=\"string\">&quot;outerHandler&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width:200px;height:200px;background-color:red&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">catchtap</span>=<span class=\"string\">&quot;innerHandler&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width:100px;height:100px;background-color:blue&quot;</span>&gt;</span>   <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"> innerHandler:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;innerHandler&quot;</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">outerHandler</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;outerHandler&quot;</span>);</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-3-单向数据流\"><a href=\"#5-3-单向数据流\" class=\"headerlink\" title=\"5.3 单向数据流\"></a>5.3 单向数据流</h2><p><img src=\"/2020/10/04/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B5%E9%9D%A2%E5%B1%82%E6%95%B0%E6%8D%AE%E3%80%81%E4%BA%8B%E4%BB%B6/Users\\爱海\\myblog\\source_posts\\小程序页面层数据、事件\\Snipaste_2019-09-26_09-17-49.png\"></p>\n<img src=\"/2020/10/04/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B5%E9%9D%A2%E5%B1%82%E6%95%B0%E6%8D%AE%E3%80%81%E4%BA%8B%E4%BB%B6/Snipaste_2019-09-26_09-17-49.png\" class>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--index.wxml--&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;&#123;&#123;message&#125;&#125;&quot;</span> <span class=\"attr\">bindinput</span>=<span class=\"string\">&quot;inputHandle&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">input</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">inputHandle:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//可以通过e.detail.value来获取input输入框的值</span></span><br><span class=\"line\">    <span class=\"comment\">//微信小程序采用单向数据流，input输入框的值改变之后不会触发数据源中数据的变化，如果要页面改掉之后同步更新数据，需要通过setData()方法手动触发</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(e.detail.value)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//注意：修改data数据的时候不能this.data.message=&quot;&quot;，这样数据修改之后不会触发页面刷新</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//需要通过setData(&#123;&#125;) 方法来修改数据，会触发页面同步更新</span></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.setData(&#123;</span><br><span class=\"line\">      <span class=\"attr\">message</span>:e.detail.value</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--小程序的双向绑定2：类似于Vue的双向绑定的--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">model:value</span>=<span class=\"string\">&quot;&#123;&#123;value2&#125;&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"6-获取页面元素\"><a href=\"#6-获取页面元素\" class=\"headerlink\" title=\"6.获取页面元素\"></a>6.获取页面元素</h1><p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/wxml/wx.createSelectorQuery.html\">节点信息查询 API</a> 可以用于获取节点属性、样式、在界面上的位置等信息。</p>\n<p>最常见的用法是使用这个接口来查询某个节点的当前位置，以及界面的滚动位置。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建SelectorQuery查询对象</span></span><br><span class=\"line\">   <span class=\"keyword\">let</span> query = wx.createSelectorQuery();</span><br><span class=\"line\">   <span class=\"comment\">//选取一个节点</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> firstDivider = query.select(<span class=\"string\">&quot;.divider&quot;</span>);</span><br><span class=\"line\">   <span class=\"comment\">//选取所有节点</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> dividers = query.selectAll(<span class=\"string\">&quot;.divider&quot;</span>);</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"comment\">//获取节点的相关属性</span></span><br><span class=\"line\">   dividers.fields(&#123;</span><br><span class=\"line\">     <span class=\"attr\">id</span>: <span class=\"literal\">false</span>,<span class=\"comment\">//是否返回节点id</span></span><br><span class=\"line\">     <span class=\"attr\">rect</span>: <span class=\"literal\">true</span>,<span class=\"comment\">//是否返回节点布局位置</span></span><br><span class=\"line\">     <span class=\"attr\">dataset</span>: <span class=\"literal\">true</span>,<span class=\"comment\">//返回数据集</span></span><br><span class=\"line\">     <span class=\"attr\">size</span>: <span class=\"literal\">true</span>,<span class=\"comment\">//返回宽高</span></span><br><span class=\"line\">     <span class=\"attr\">scrollOffset</span>: <span class=\"literal\">true</span>,<span class=\"comment\">//返回 scrollLeft,scrollTop</span></span><br><span class=\"line\">     <span class=\"attr\">properties</span>: [<span class=\"string\">&#x27;scrollX&#x27;</span>, <span class=\"string\">&#x27;scrollY&#x27;</span>],<span class=\"comment\">//只能获得组件文档中标注的常规属性值，id class style 和事件绑定的属性值不可获取</span></span><br><span class=\"line\">     <span class=\"attr\">computedStyle</span>: [<span class=\"string\">&#x27;margin&#x27;</span>, <span class=\"string\">&#x27;backgroundColor&#x27;</span>]<span class=\"comment\">//此处返回指定要返回的样式名</span></span><br><span class=\"line\">   &#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">     <span class=\"built_in\">console</span>.log(res,<span class=\"string\">&quot;aaa&quot;</span>)</span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">//添加节点的布局位置的查询请求</span></span><br><span class=\"line\">   dividers.boundingClientRect(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">rect</span>) </span>&#123;</span><br><span class=\"line\">     <span class=\"built_in\">console</span>.log(rect, <span class=\"string\">&quot;bbb&quot;</span>)</span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">//添加节点的滚动位置查询请求</span></span><br><span class=\"line\">   <span class=\"comment\">//query.selectViewport():选择显示区域，用于获取显示区域的尺寸、滚动位置等信息</span></span><br><span class=\"line\">   query.selectViewport().scrollOffset(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">     <span class=\"built_in\">console</span>.log(res,<span class=\"string\">&quot;ccc&quot;</span>)</span><br><span class=\"line\">   &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">//query.exec: 执行所有的请求</span></span><br><span class=\"line\">   query.exec(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">     <span class=\"comment\">//res中包含所有请求的执行结果</span></span><br><span class=\"line\">     <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">   &#125;)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"7-动画\"><a href=\"#7-动画\" class=\"headerlink\" title=\"7.动画\"></a>7.动画</h1><h2 id=\"7-1-CSS动画\"><a href=\"#7-1-CSS动画\" class=\"headerlink\" title=\"7.1 CSS动画\"></a>7.1 CSS动画</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;&quot;</span><span class=\"attr\">view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">.view &#123;</span><br><span class=\"line\">  width: 200rpx;</span><br><span class=\"line\">  height: 200rpx;</span><br><span class=\"line\">  background-color: red;</span><br><span class=\"line\">  margin-left: 100rpx;</span><br><span class=\"line\">  margin-top: 100rpx;</span><br><span class=\"line\">  /** 第一种写法**/</span><br><span class=\"line\">  animation-name: viewlinear;</span><br><span class=\"line\">  animation-duration: 2s;</span><br><span class=\"line\">  animation-timing-function: linear;</span><br><span class=\"line\">  animation-iteration-count: infinite;</span><br><span class=\"line\">  /** 第二种写法**/</span><br><span class=\"line\">  animation: viewlinear 2s linear infinite;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@keyframes viewlinear &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  /** 第一种写法**/</span><br><span class=\"line\">  0% &#123;</span><br><span class=\"line\">    background-color: red;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  50% &#123;</span><br><span class=\"line\">    background-color: orange;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  100% &#123;</span><br><span class=\"line\">    background-color: yellow;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-2-使用wx-createAnimation接口\"><a href=\"#7-2-使用wx-createAnimation接口\" class=\"headerlink\" title=\"7.2 使用wx.createAnimation接口\"></a>7.2 使用wx.createAnimation接口</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;view  animation=<span class=\"string\">&quot;&#123;&#123;animationData&#125;&#125;&quot;</span> style=<span class=\"string\">&quot;background:red;height:100rpx;width:100rpx&quot;</span>&gt;sss&lt;/view&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&quot;scaleWidthOpcityBg&quot;</span>&gt;</span>缩放宽度透明度背景色<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&quot;rotateAndScale&quot;</span>&gt;</span>旋转和缩放同时进行<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&quot;rotateThenScale&quot;</span>&gt;</span>先旋转再缩放<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">&quot;rotateAndScaleThenTranslate&quot;</span>&gt;</span>先旋转再平移<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Page(&#123;</span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">animationData</span>: &#123;&#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">scaleWidthOpcityBg</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> animation = wx.createAnimation(&#123;</span><br><span class=\"line\">      <span class=\"attr\">duration</span>: <span class=\"number\">1000</span>,</span><br><span class=\"line\">      <span class=\"attr\">timingFunction</span>: <span class=\"string\">&quot;ease&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">transformOrigin</span>: <span class=\"string\">&quot;50% 50%&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">delay</span>: <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">//step()动画分组</span></span><br><span class=\"line\">    animation.scale(<span class=\"number\">2</span>, <span class=\"number\">2</span>).width(<span class=\"number\">100</span>).opacity(<span class=\"number\">0.5</span>).backgroundColor(<span class=\"string\">&quot;blue&quot;</span>).rotate(<span class=\"number\">45</span>).step();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.setData(&#123;</span><br><span class=\"line\">      <span class=\"attr\">animationData</span>: animation.export()</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">rotateAndScale</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> animation = wx.createAnimation(&#123;</span><br><span class=\"line\">      <span class=\"attr\">duration</span>: <span class=\"number\">1000</span>,</span><br><span class=\"line\">      <span class=\"attr\">timingFunction</span>: <span class=\"string\">&quot;ease&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">transformOrigin</span>: <span class=\"string\">&quot;50% 50%&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">delay</span>: <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">// 旋转同时放大</span></span><br><span class=\"line\">    animation.rotate(<span class=\"number\">45</span>).scale(<span class=\"number\">2</span>, <span class=\"number\">2</span>).step()</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.setData(&#123;</span><br><span class=\"line\">      <span class=\"attr\">animationData</span>: animation.export()</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">rotateThenScale</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> animation = wx.createAnimation(&#123;</span><br><span class=\"line\">      <span class=\"attr\">duration</span>: <span class=\"number\">1000</span>,</span><br><span class=\"line\">      <span class=\"attr\">timingFunction</span>: <span class=\"string\">&quot;ease&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">transformOrigin</span>: <span class=\"string\">&quot;50% 50%&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">delay</span>: <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">// 先旋转后放大</span></span><br><span class=\"line\">    animation.rotate(<span class=\"number\">45</span>).step()</span><br><span class=\"line\">    animation.scale(<span class=\"number\">2</span>, <span class=\"number\">2</span>).step()</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.setData(&#123;</span><br><span class=\"line\">      <span class=\"attr\">animationData</span>: animation.export()</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">rotateAndScaleThenTranslate</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> animation = wx.createAnimation(&#123;</span><br><span class=\"line\">      <span class=\"attr\">duration</span>: <span class=\"number\">1000</span>,</span><br><span class=\"line\">      <span class=\"attr\">timingFunction</span>: <span class=\"string\">&quot;ease&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">transformOrigin</span>: <span class=\"string\">&quot;50% 50%&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">delay</span>: <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">// 先旋转同时放大，然后平移</span></span><br><span class=\"line\">    animation.rotate(<span class=\"number\">45</span>).scale(<span class=\"number\">2</span>, <span class=\"number\">2</span>).step()</span><br><span class=\"line\">    animation.translate(<span class=\"number\">100</span>, <span class=\"number\">100</span>).step(&#123; <span class=\"attr\">duration</span>: <span class=\"number\">1000</span> &#125;)</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.setData(&#123;</span><br><span class=\"line\">      <span class=\"attr\">animationData</span>: animation.export()</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//注意点：微信小程序createAnimation动画结束后会保留动画结束的状态</span></span><br></pre></td></tr></table></figure>\n\n","text":"目录[toc]1.页面层数据绑定1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>2","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"微信小程序","slug":"微信小程序","count":2,"path":"api/tags/微信小程序.json"}]},{"title":"小程序真机调试出错In order to be iterable, non-array objects must have a [Symbol.iterator]() method.","slug":"小程序真机调试出错","date":"2020-06-14T07:54:31.000Z","updated":"2022-02-14T12:18:09.070Z","comments":true,"path":"api/articles/小程序真机调试出错.json","excerpt":"","keywords":null,"cover":"/2020/06/14/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%E5%87%BA%E9%94%99/Users\\爱海\\myblog\\source_posts\\小程序真机调试出错\\miniperro.png","content":"<h1 id=\"新手小白第一篇\"><a href=\"#新手小白第一篇\" class=\"headerlink\" title=\"新手小白第一篇\"></a>新手小白第一篇</h1><h2 id=\"最近在学习小程序开发，在做一个小说阅读器方面的小项目，第一篇博客就来记录一下项目过程中遇到的小问题吧\"><a href=\"#最近在学习小程序开发，在做一个小说阅读器方面的小项目，第一篇博客就来记录一下项目过程中遇到的小问题吧\" class=\"headerlink\" title=\"最近在学习小程序开发，在做一个小说阅读器方面的小项目，第一篇博客就来记录一下项目过程中遇到的小问题吧~\"></a>最近在学习小程序开发，在做一个小说阅读器方面的小项目，第一篇博客就来记录一下项目过程中遇到的小问题吧~</h2><p>小程序的大致页面已经完成了，在模拟器上能够顺利的展示，但是在使用真机调试的时候出现了错误，“In order to be iterable, non-array objects must have a <a href>Symbol.iterator</a> method.”，</p>\n<p><img src=\"/2020/06/14/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%E5%87%BA%E9%94%99/Users\\爱海\\myblog\\source_posts\\小程序真机调试出错\\miniperro.png\"></p>\n<img src=\"/2020/06/14/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%E5%87%BA%E9%94%99/20211105erromet.png\" class title=\"cs\">\n\n<p>（英语不可的我当然是百度拉）意思是试图破坏不可迭代实例的结构无效。为了具有可迭代性，非数组对象必须有一个<a href>Symbol.iterator</a>方法。查找解决问题有说改变调试基础库版本的，但是尝试了一下并没啥用，然后，下一篇就让我找到了一个非常简单的解决方法，“在通过网络请求获取数据的时候，给渲染数据的对象赋值时候，||一个空数据 ”，在显示我错误的js页面行数中的代码加上空数组，果然解决了问题！</p>\n<p><img src=\"/2020/06/14/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%E5%87%BA%E9%94%99/Users\\爱海\\myblog\\source_posts\\小程序真机调试出错\\20211105erromet.png\"></p>\n<img src=\"/2020/06/14/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%E5%87%BA%E9%94%99/20211105erromet.png\" class>\n\n<p>第一篇博客就酱啦，欧耶耶，每次解决bug就又感觉程序人生又充满了希望呢~</p>\n","text":"新手小白第一篇最近在学习小程序开发，在做一个小说阅读器方面的小项目，第一篇博客就来记录一下项目过程中遇到的小问题吧~小程序的大致页面已经完成了，在模拟器上能够顺利的展示，但是在使用真机调试的时候出现了错误，“In order to be iterable, non-array o","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"微信小程序","slug":"微信小程序","count":2,"path":"api/tags/微信小程序.json"}]}]}