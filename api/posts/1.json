{"total":17,"pageSize":10,"pageCount":2,"data":[{"title":"uni-app基本使用","slug":"uni-app基本使用","date":"2021-12-10T06:09:30.000Z","updated":"2022-02-16T08:33:30.235Z","comments":true,"path":"api/articles/uni-app基本使用.json","excerpt":"<!-- toc -->\n\n<h1 id=\"一、uni-app初识\"><a href=\"#一、uni-app初识\" class=\"headerlink\" title=\"一、uni-app初识\"></a>一、uni-app初识</h1><p><code>uni-app</code> 是一个使用 <a href=\"https://vuejs.org/\">Vue.js</a> 开发所有前端应用的框架，开发者编写一套代码，可发布到iOS、Android、H5、以及各种小程序（微信/支付宝/百度/头条/QQ/钉钉）等多个平台。</p>","keywords":null,"cover":"/2021/12/10/uni-app%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/main.png","content":null,"text":"一、uni-app初识uni-app 是一个使用 Vue.js 开发所有前端应用的框架，开发者编写一套代码，可发布到iOS、Android、H5、以及各种小程序（微信/支付宝/百度/头条/QQ/钉钉）等多个平台。   [Figure] 三、为什么使用uni-app小程序原生开发有","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"uni-app 微信小程序","slug":"uni-app-微信小程序","count":1,"path":"api/tags/uni-app-微信小程序.json"}]},{"title":"Nuxt3项目打包问题解决","slug":"NUxt3项目打包问题解决","date":"2021-11-16T02:58:14.000Z","updated":"2022-02-16T08:32:17.201Z","comments":true,"path":"api/articles/NUxt3项目打包问题解决.json","excerpt":"<h2 id=\"最近在开发一个Nuxt3全栈项目，不得不说，坑很多！！还好最后成功打包上线。下面是记录一下项目部署总结\"><a href=\"#最近在开发一个Nuxt3全栈项目，不得不说，坑很多！！还好最后成功打包上线。下面是记录一下项目部署总结\" class=\"headerlink\" title=\"最近在开发一个Nuxt3全栈项目，不得不说，坑很多！！还好最后成功打包上线。下面是记录一下项目部署总结\"></a>最近在开发一个Nuxt3全栈项目，不得不说，坑很多！！还好最后成功打包上线。下面是记录一下项目部署总结</h2>","keywords":null,"cover":null,"content":null,"text":"最近在开发一个Nuxt3全栈项目，不得不说，坑很多！！还好最后成功打包上线。下面是记录一下项目部署总结1、 配置服务器环境我的项目数据库使用的MongoDB，所以先安装 mongodb 、nodejs、NoSQLBooster for MongoDB 1<br>2<br>3<br","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"Nuxt3","slug":"Nuxt3","count":1,"path":"api/tags/Nuxt3.json"}]},{"title":"简单了解nuxt3","slug":"简单了解nuxt3","date":"2021-10-20T02:45:26.000Z","updated":"2022-02-16T02:59:07.729Z","comments":true,"path":"api/articles/简单了解nuxt3.json","excerpt":"<h2 id=\"什么是NUxt\"><a href=\"#什么是NUxt\" class=\"headerlink\" title=\"什么是NUxt?\"></a>什么是NUxt?</h2><p>Nuxt 是一个基于 Vue 生态的更高层的框架，为开发服务端渲染(SSR)的 Vue 应用提供了极其便利的开发体验。</p>","keywords":null,"cover":"/2021/10/20/%E7%AE%80%E5%8D%95%E4%BA%86%E8%A7%A3nuxt3/1638174037308.png","content":null,"text":"什么是NUxt?Nuxt 是一个基于 Vue 生态的更高层的框架，为开发服务端渲染(SSR)的 Vue 应用提供了极其便利的开发体验。Vue.js是开发SPA单页面应用的，传统的SPA应用是将bundle.js从服务端获取，然后在客户端解析并挂载到dom。Nuxt在服务端渲染，可","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"nuxt3","slug":"nuxt3","count":1,"path":"api/tags/nuxt3.json"}]},{"title":"在vue项目中使用骨架屏","slug":"在vue项目中使用骨架屏","date":"2021-08-16T01:32:54.000Z","updated":"2022-02-16T01:51:13.608Z","comments":true,"path":"api/articles/在vue项目中使用骨架屏.json","excerpt":"<p>现在的应用开发，基本上都是前后端分离的，前端主流框架有SPA、MPA等，那么解决页面渲染、白屏时间成为首要关注的点</p>\n<p>webpack可以按需加载，减小首屏需要加载代码的体积；</p>","keywords":null,"cover":"/2021/08/16/%E5%9C%A8vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8%E9%AA%A8%E6%9E%B6%E5%B1%8F/20210515100130221.jpeg","content":null,"text":"现在的应用开发，基本上都是前后端分离的，前端主流框架有SPA、MPA等，那么解决页面渲染、白屏时间成为首要关注的点webpack可以按需加载，减小首屏需要加载代码的体积；使用CDN技术、静态代码等缓存技术，可以减小加载渲染的时长问题：但是首页依然存在加载、渲染等待时长的问题。那么","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"vue3","slug":"vue3","count":3,"path":"api/tags/vue3.json"}]},{"title":"vue3学习之composition API","slug":"vue3学习之composition-API","date":"2021-08-15T13:23:43.000Z","updated":"2022-02-15T13:43:27.447Z","comments":true,"path":"api/articles/vue3学习之composition-API.json","excerpt":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p> Vue3 中的新增杀器 —— Composition API : 一组低侵入式的、函数式的 API，它使我们能够更灵活地「组合」组件的逻辑。</p>","keywords":null,"cover":"/2021/08/15/vue3%E5%AD%A6%E4%B9%A0%E4%B9%8Bcomposition-API/20220010.png","content":null,"text":"前言 Vue3 中的新增杀器 —— Composition API : 一组低侵入式的、函数式的 API，它使我们能够更灵活地「组合」组件的逻辑。Composition API 的灵感来自于 React Hooks ，是比 mixin 更强大的存在。它可以提高代码逻辑的可复用性，","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"vue3","slug":"vue3","count":3,"path":"api/tags/vue3.json"}]},{"title":"vue-router底层实现原理","slug":"vue-router底层实现原理","date":"2021-07-20T13:08:42.000Z","updated":"2022-02-15T13:18:29.165Z","comments":true,"path":"api/articles/vue-router底层实现原理.json","excerpt":"<p>什么是vue-router?</p>\n<p>定义： vue用来写路由一个插件。包括 router-link、router-view 两个组件， 其中 router-link 用于实现跳转，router-view 用于展示视图 </p>","keywords":null,"cover":"/2021/07/20/vue-router%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/20190517095559229.png","content":null,"text":"什么是vue-router?定义： vue用来写路由一个插件。包括 router-link、router-view 两个组件， 其中 router-link 用于实现跳转，router-view 用于展示视图 vue-router的两种模式hash模式hash模式背后的原理是on","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"vue3 vue-router","slug":"vue3-vue-router","count":1,"path":"api/tags/vue3-vue-router.json"}]},{"title":"为什么要使用vue3","slug":"vue2与vue3的区别","date":"2021-07-15T12:29:04.000Z","updated":"2022-02-15T12:55:05.282Z","comments":true,"path":"api/articles/vue2与vue3的区别.json","excerpt":"<p>Vue 3尚未正式发布，但是维护者已经发布了Beta版本，供我们的参与者尝试并提供反馈。</p>\n<p>下面将介绍一下Vue 3的主要功能和主要变化是什么，包括fragments，teleport，Composition API以及其他一些晦涩的更改写下自己的理解。</p>","keywords":null,"cover":"/2021/07/15/vue2%E4%B8%8Evue3%E7%9A%84%E5%8C%BA%E5%88%AB/20220215203445.png","content":null,"text":"Vue 3尚未正式发布，但是维护者已经发布了Beta版本，供我们的参与者尝试并提供反馈。下面将介绍一下Vue 3的主要功能和主要变化是什么，包括fragments，teleport，Composition API以及其他一些晦涩的更改写下自己的理解。我们将建立什么我们将构建一个带","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"vue2,vue3","slug":"vue2-vue3","count":1,"path":"api/tags/vue2-vue3.json"}]},{"title":"MVC/MVVM","slug":"MVC-MVVM","date":"2021-02-15T12:18:42.000Z","updated":"2022-02-15T12:29:18.461Z","comments":true,"path":"api/articles/MVC-MVVM.json","excerpt":"<h1 id=\"简单介绍前端MVC-MVVM模式特点及区别\"><a href=\"#简单介绍前端MVC-MVVM模式特点及区别\" class=\"headerlink\" title=\"简单介绍前端MVC/MVVM模式特点及区别\"></a>简单介绍前端MVC/MVVM模式特点及区别</h1>","keywords":null,"cover":"/2021/02/15/MVC-MVVM/20220215202152.png","content":null,"text":"简单介绍前端MVC/MVVM模式特点及区别一.概述MVC,MVP,MVVM是三种常见的前端架构模式(Architectural Pattern),它通过分离关注点来改进代码组织方式。不同于设计模式(Design Pattern),只是为了解决一类问题而总结出的抽象方法，一种架构模","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"vue3","slug":"vue3","count":3,"path":"api/tags/vue3.json"}]},{"title":"微信小程序登录授权及获取用户信息API详解","slug":"微信小程序登录","date":"2020-11-19T14:30:35.000Z","updated":"2022-02-15T12:14:37.438Z","comments":true,"path":"api/articles/微信小程序登录.json","excerpt":"<p>目录</p>\n<!--toc-->\n\n<p>[toc] </p>\n<h1 id=\"一、API详解\"><a href=\"#一、API详解\" class=\"headerlink\" title=\"一、API详解\"></a><strong>一、API详解</strong></h1><h2 id=\"1-登录\"><a href=\"#1-登录\" class=\"headerlink\" title=\"1.登录\"></a>1.登录</h2><p>通过wx.login拿到code给后台，接口返回token、openID等参数。有了这些参数我们就可以直接请求那些不需要用户操作便可以读取的接口（比如：列表、详情、视频播放等等）；</p>","keywords":null,"cover":"/2020/11/19/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%99%BB%E5%BD%95/20200209154638639.jpg","content":null,"text":"目录[toc] 一、API详解1.登录通过wx.login拿到code给后台，接口返回token、openID等参数。有了这些参数我们就可以直接请求那些不需要用户操作便可以读取的接口（比如：列表、详情、视频播放等等）； ①wx.login(OBJECT)调用接口wx.login(","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"微信小程序登录","slug":"微信小程序登录","count":1,"path":"api/tags/微信小程序登录.json"}]},{"title":"原生小程序发送请求注意事项","slug":"原生小程序发送请求","date":"2020-10-06T13:28:26.000Z","updated":"2022-02-15T12:13:33.347Z","comments":true,"path":"api/articles/原生小程序发送请求.json","excerpt":"<h1 id=\"原生小程序使用-wx-request请求数据\"><a href=\"#原生小程序使用-wx-request请求数据\" class=\"headerlink\" title=\"原生小程序使用 wx.request请求数据\"></a>原生小程序使用 wx.request请求数据</h1>","keywords":null,"cover":"/2020/10/06/%E5%8E%9F%E7%94%9F%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82/1569742369137.png","content":null,"text":"原生小程序使用 wx.request请求数据小程序端向服务端发送请求有两种方式：（1）小程序端直接向服务端发起请求。小程序API中有一个函数：wx.request()，通过这个函数就可以在小程序端直接向后台发起请求；（2）通过云函数向服务端发起请求。相当于通过小程序的后端向服务器","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"原生小程序，wx.request，微信开发者工具","slug":"原生小程序，wx-request，微信开发者工具","count":1,"path":"api/tags/原生小程序，wx-request，微信开发者工具.json"}]}]}