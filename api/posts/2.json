{"total":17,"pageSize":10,"pageCount":2,"data":[{"title":"ReactNative之Android打包APK方法","slug":"ReactNative之Android打包APK方法","date":"2020-10-06T08:04:55.000Z","updated":"2022-02-16T08:26:41.510Z","comments":true,"path":"api/articles/ReactNative之Android打包APK方法.json","excerpt":"<p> 踩坑无数的艰辛打包史。。。。</p>","keywords":null,"cover":"/2020/10/06/ReactNative%E4%B9%8BAndroid%E6%89%93%E5%8C%85APK%E6%96%B9%E6%B3%95/20220216161001.png","content":null,"text":" 踩坑无数的艰辛打包史。。。。 Android 打包 闪退的问题,极有可能是你签名配置不正确,建议仔细检查每个步骤,找不到问题建议命令打包根据错误提示解决 1、生成签名秘钥：方法一:你可以用keytool命令生成一个私有密钥。在Windows上keytool命令放在JDK的bin","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"react—native","slug":"react—native","count":1,"path":"api/tags/react—native.json"}]},{"title":"小程序页面层数据、事件","slug":"小程序页面层数据、事件","date":"2020-10-04T11:24:15.000Z","updated":"2022-02-15T12:13:47.598Z","comments":true,"path":"api/articles/小程序页面层数据、事件.json","excerpt":"<p>目录</p>\n<p>[toc]</p>\n<p>原生小程序的语法并不复杂，下面整理了页面层次的相关知识点。</p>","keywords":null,"cover":"/2020/10/04/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B5%E9%9D%A2%E5%B1%82%E6%95%B0%E6%8D%AE%E3%80%81%E4%BA%8B%E4%BB%B6/Users\\爱海\\myblog\\source_posts\\小程序页面层数据、事件\\1569379659990.png","content":null,"text":"目录[toc]原生小程序的语法并不复杂，下面整理了页面层次的相关知识点。1.页面层数据绑定小程序有自己的一套语法，最简单的将数据渲染到页面，在data中定义数据，再通过&#123;&#123;&#125;&#125;双括号在页面显示1<br>2<br>3<br>4<br>5<br","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"微信小程序","slug":"微信小程序","count":2,"path":"api/tags/微信小程序.json"}]},{"title":"小程序真机调试出错In order to be iterable, non-array objects must have a [Symbol.iterator]() method.","slug":"小程序真机调试出错","date":"2020-06-14T07:54:31.000Z","updated":"2022-02-15T12:13:40.784Z","comments":true,"path":"api/articles/小程序真机调试出错.json","excerpt":"<h1 id=\"新手小白第一篇\"><a href=\"#新手小白第一篇\" class=\"headerlink\" title=\"新手小白第一篇\"></a>新手小白第一篇</h1><h2 id=\"最近在学习小程序开发，在做一个小说阅读器方面的小项目，第一篇博客就来记录一下项目过程中遇到的小问题吧\"><a href=\"#最近在学习小程序开发，在做一个小说阅读器方面的小项目，第一篇博客就来记录一下项目过程中遇到的小问题吧\" class=\"headerlink\" title=\"最近在学习小程序开发，在做一个小说阅读器方面的小项目，第一篇博客就来记录一下项目过程中遇到的小问题吧~\"></a>最近在学习小程序开发，在做一个小说阅读器方面的小项目，第一篇博客就来记录一下项目过程中遇到的小问题吧~</h2>","keywords":null,"cover":"/2020/06/14/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%E5%87%BA%E9%94%99/20211105erromet.png","content":null,"text":"新手小白第一篇最近在学习小程序开发，在做一个小说阅读器方面的小项目，第一篇博客就来记录一下项目过程中遇到的小问题吧~小程序的大致页面已经完成了，在模拟器上能够顺利的展示，但是在使用真机调试的时候出现了错误，“In order to be iterable, non-array o","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"微信小程序","slug":"微信小程序","count":2,"path":"api/tags/微信小程序.json"}]},{"title":"混合移动APP开发环境配置","slug":"混合移动APP开发环境配置","date":"2020-04-17T02:49:19.000Z","updated":"2022-02-16T08:02:28.351Z","comments":true,"path":"api/articles/混合移动APP开发环境配置.json","excerpt":"","keywords":null,"cover":"/2020/04/17/%E6%B7%B7%E5%90%88%E7%A7%BB%E5%8A%A8APP%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/1562910885243.png","content":"<h1 id=\"移动App开发环境配置\"><a href=\"#移动App开发环境配置\" class=\"headerlink\" title=\"移动App开发环境配置\"></a>移动App开发环境配置</h1><h3 id=\"1-安装java-jdk（1-8）\"><a href=\"#1-安装java-jdk（1-8）\" class=\"headerlink\" title=\"1 安装java jdk（1.8）\"></a>1 安装java jdk（1.8）</h3><ol>\n<li>修改环境变量，新增<code>JAVA_HOME</code>的系统环境变量，值为<code>C:\\Program Files (x86)\\Java\\jdk1.8.0_112</code>，也就是安装JDK的根目录</li>\n<li>修改系统环境变量<code>Path</code>，在<code>Path</code>之后新增<code>%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;</code></li>\n<li>新建<strong>系统环境变量</strong><code>CLASSPATH</code>，值为<code>.;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar;</code></li>\n<li>保存所有的系统环境变量，同时退出系统环境变量配置窗口，然后运行cmd命令行工具，输入<code>javac</code>，如果能出现javac的命令选项，就表示配置成功！</li>\n</ol>\n<h3 id=\"2-安装Node-js环境\"><a href=\"#2-安装Node-js环境\" class=\"headerlink\" title=\"2 安装Node.js环境\"></a>2 安装Node.js环境</h3><p>注意：需要安装最新的长期稳定版本，不要实验版本；安装完毕之后的node.js会自动配置到全局系统环境变量中<br>安装完毕后，可以输入<code>node -v</code>查看node版本号；</p>\n<h3 id=\"3-安装Git环境\"><a href=\"#3-安装Git环境\" class=\"headerlink\" title=\"3 安装Git环境\"></a>3 安装Git环境</h3><p>Git安装完毕后，会自动配置到系统环境变量中；<br>可以通过运行<code>git --version</code>来检查是否正确安装和配置了Git的环境变量；</p>\n<h3 id=\"4-安装Python环境\"><a href=\"#4-安装Python环境\" class=\"headerlink\" title=\"4 安装Python环境\"></a>4 安装Python环境</h3><ol>\n<li>注意：安装Python时候，只能<strong>安装2.×的版本</strong>，注意勾选安装界面上的<code>Add Python to path</code>，这样才能自动将Python安装到系统环境变量中；</li>\n<li>安装完毕之后，可以在命令行中运行<code>python</code>，检查是否成功安装了python。</li>\n</ol>\n<h3 id=\"5-配置安卓环境\"><a href=\"#5-配置安卓环境\" class=\"headerlink\" title=\"5 配置安卓环境\"></a>5 配置安卓环境</h3><h4 id=\"a-使用已经配好的环境：\"><a href=\"#a-使用已经配好的环境：\" class=\"headerlink\" title=\"a) 使用已经配好的环境：\"></a>a) 使用已经配好的环境：</h4><p>将资料中的android目录解压到c:/android下(已经提前安装好很多软件)</p>\n<h4 id=\"b-安装android-studio配置安卓环境\"><a href=\"#b-安装android-studio配置安卓环境\" class=\"headerlink\" title=\"b) 安装android studio配置安卓环境\"></a>b) 安装android studio配置安卓环境</h4><p><a href=\"https://reactnative.cn/docs/getting-started.html\">https://reactnative.cn/docs/getting-started.html</a></p>\n<ol>\n<li><p>下载配置android studio</p>\n</li>\n<li><p>初次启动android studio的时候配置proxy代理</p>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mirrors.neusoft.edu.cn:80</span><br><span class=\"line\">点击clear passwords</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2020/04/17/%E6%B7%B7%E5%90%88%E7%A7%BB%E5%8A%A8APP%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/1562910885243.png\" class>\n\n<img src=\"/2020/04/17/%E6%B7%B7%E5%90%88%E7%A7%BB%E5%8A%A8APP%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/1562910917004.png\" class>\n\n<p>   3.自定义安装并指定android路径为c:/android目录</p>\n<img src=\"/2020/04/17/%E6%B7%B7%E5%90%88%E7%A7%BB%E5%8A%A8APP%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/1562906726308.png\" class>\n\n<img src=\"/2020/04/17/%E6%B7%B7%E5%90%88%E7%A7%BB%E5%8A%A8APP%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/1562906929342.png\" class>\n\n<p>   4.安装android studio需要的组件</p>\n<img src=\"/2020/04/17/%E6%B7%B7%E5%90%88%E7%A7%BB%E5%8A%A8APP%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/1562907136464.png\" class>\n\n<img src=\"/2020/04/17/%E6%B7%B7%E5%90%88%E7%A7%BB%E5%8A%A8APP%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/1562907475255.png\" class>\n\n<p>   5.在android studio的启动界面选择config下的sdk manager安装android-28</p>\n<img src=\"/2020/04/17/%E6%B7%B7%E5%90%88%E7%A7%BB%E5%8A%A8APP%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/1562922886367.png\" class>\n\n<h4 id=\"c-配置安卓环境变量\"><a href=\"#c-配置安卓环境变量\" class=\"headerlink\" title=\"c) 配置安卓环境变量\"></a>c) 配置安卓环境变量</h4><p>在系统环境变量中新建<code>ANDROID_HOME</code>，值为android SDK Manager的安装路径<code>C:\\android</code>，紧接着，在Path中新增<code>;%ANDROID_HOME%\\tools;%ANDROID_HOME%\\platform-tools;</code></p>\n<h3 id=\"6-安装夜神模拟器\"><a href=\"#6-安装夜神模拟器\" class=\"headerlink\" title=\"6 安装夜神模拟器\"></a>6 安装夜神模拟器</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.点击夜神模拟器安装包，安装模拟器</span></span><br><span class=\"line\"><span class=\"number\">375</span>*<span class=\"number\">667</span>   dpi:<span class=\"number\">163</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2.将C:\\android\\platform-tools\\adb.exe拷贝一份，重命名为nox_adb.exe，替换掉D:\\Program Files\\Nox\\bin下的nox_adb.exe文件</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//3.打开夜神模拟器</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//4.使用adb命令连接模拟器</span></span><br><span class=\"line\">adb connect <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">62001</span>   /  adb disconnect <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">62001</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//5.查看连接到电脑上的设备列表</span></span><br><span class=\"line\">adb devices</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-运行react-native\"><a href=\"#7-运行react-native\" class=\"headerlink\" title=\"7 运行react-native\"></a>7 运行react-native</h3><ol>\n<li><p>安装完node后建议<strong>设置npm镜像</strong>以加速后面的过程（或使用科学上网工具）。注意：<strong>不要使用cnpm！</strong>cnpm安装的模块路径比较奇怪，package不能正常识别！</p>\n<blockquote>\n<p>npm config set disturl <a href=\"https://npm.taobao.org/dist\">https://npm.taobao.org/dist</a> –global</p>\n<p>如果使用了nrm，要切换到镜像源到taobao，不要使用cnpm</p>\n<p>关掉蓝灯等VPN代理</p>\n</blockquote>\n</li>\n<li><p>Yarn、React Native的命令行工具（react-native-cli）</p>\n</li>\n</ol>\n<ul>\n<li><p>Yarn是Facebook提供的替代npm的工具，可以加速node模块的下载(react-native-cli中默认使用yarn来装包的)</p>\n<p>React Native的命令行工具用于执行创建、初始化、更新项目、运行打包服务（packager）等任务。</p>\n<blockquote>\n<p>npm install -g yarn react-native-cli</p>\n<p><strong>也可以直接使用npx的方式创建react native项目，无需手动安装react-native-cli，但是yarn肯定要全局安装的</strong></p>\n</blockquote>\n</li>\n<li><p>安装完yarn后同理也要设置镜像源：</p>\n<blockquote>\n<p>yarn config set registry <a href=\"https://registry.npm.taobao.org/\">https://registry.npm.taobao.org</a> –global<br>yarn config set disturl <a href=\"https://npm.taobao.org/dist\">https://npm.taobao.org/dist</a> –global</p>\n</blockquote>\n</li>\n</ul>\n<ol start=\"3\">\n<li><p>运行<code>npx react-native init AwesomeProject</code>创建React-Native项目 <strong>(注意：需要确保目录路径没有中文)</strong></p>\n<p><strong>或者通过npx的方式创建   npx react-native init AwesomeProject</strong></p>\n</li>\n<li><p>运行<code>npx react-native run-android</code>打包编译安卓项目，并部署到夜神模拟器中</p>\n<p><strong>问题1:index.android.bundle</strong></p>\n</li>\n</ol>\n<img src=\"/2020/04/17/%E6%B7%B7%E5%90%88%E7%A7%BB%E5%8A%A8APP%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/clip_image002.jpg\" class>\n\n\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A)在android/app/src/main下新建assets文件夹</span><br><span class=\"line\"></span><br><span class=\"line\">B)在项目根目录下输入如下命令：</span><br><span class=\"line\">react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res</span><br><span class=\"line\"></span><br><span class=\"line\">C) 重新使用 react-native run-android 来启动项目 </span><br></pre></td></tr></table></figure>\n\n<p> <strong>问题2：解决热更新的问题(8081端口被java.exe占用的问题)</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A) netstat -ano | findstr &quot;8081&quot;    如果结果显示 java.exe，则说明8081端口被占用了</span><br><span class=\"line\">B) react-native  run-android 把项目安装到夜神模拟器</span><br><span class=\"line\">C) 打开夜神模拟器，打开app，摇一摇，如下图设置端口</span><br><span class=\"line\">D) 关闭调试窗口，然后通过react-native start --port  9999 重新打开服务端口</span><br><span class=\"line\">E) 打开夜神模拟器，摇一摇</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2020/04/17/%E6%B7%B7%E5%90%88%E7%A7%BB%E5%8A%A8APP%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/clip_image002-1575536526795.jpg\" class>\n\n<img src=\"/2020/04/17/%E6%B7%B7%E5%90%88%E7%A7%BB%E5%8A%A8APP%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/clip_image004.jpg\" class>\n\n<ol start=\"5\">\n<li><p>运行上一条命令之前，要确保有设备连接到了电脑上，可以运行<code>adb devices</code>查看当前接入的设备列表，打包好的文件，放到了<code>android\\app\\build\\outputs\\apk</code>目录下</p>\n</li>\n<li><p>Windows安装mac虚拟机打包ios的ipa</p>\n<p><a href=\"https://juejin.im/post/5b73d23ae51d45668423842e\">https://juejin.im/post/5b73d23ae51d45668423842e</a></p>\n</li>\n</ol>\n<p>到此就准备完毕了。。。</p>\n","text":"移动App开发环境配置1 安装java jdk（1.8）修改环境变量，新增JAVA_HOME的系统环境变量，值为C:\\Program Files (x86)\\Java\\jdk1.8.0_112，也就是安装JDK的根目录修改系统环境变量Path，在Path之后新增%JAVA_HOM","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"混合移动APP开发前言","slug":"混合移动APP开发前言","date":"2020-04-16T07:34:24.000Z","updated":"2022-02-16T07:50:12.093Z","comments":true,"path":"api/articles/混合移动APP开发前言.json","excerpt":"<h1 id=\"1-混合移动App开发介绍\"><a href=\"#1-混合移动App开发介绍\" class=\"headerlink\" title=\"1.混合移动App开发介绍\"></a>1.混合移动App开发介绍</h1><h2 id=\"1-1-混合开发的基本概念\"><a href=\"#1-1-混合开发的基本概念\" class=\"headerlink\" title=\"1.1 混合开发的基本概念\"></a>1.1 混合开发的基本概念</h2>","keywords":null,"cover":"/2020/04/16/%E6%B7%B7%E5%90%88%E7%A7%BB%E5%8A%A8APP%E5%BC%80%E5%8F%91%E5%89%8D%E8%A8%80/%E4%B8%89%E7%A7%8D%E5%BC%80%E5%8F%91%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%8E%9F%E7%90%86.png","content":null,"text":"1.混合移动App开发介绍1.1 混合开发的基本概念原生开发：它的英文单词是（NativeApp）,指的就是使用 IOS、Android 官方提供的工具、开发平台、配套语言进行手机App开发的方式；苹果的软件开发：使用的是 OC、或者使用Swift这门语言<br>安卓的软件开发：","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"混合移动APP,react-native","slug":"混合移动APP-react-native","count":1,"path":"api/tags/混合移动APP-react-native.json"}]},{"title":"react学习笔记总结(二)","slug":"react学习笔记总结-二","date":"2020-02-17T06:54:11.000Z","updated":"2022-02-16T07:30:49.653Z","comments":true,"path":"api/articles/react学习笔记总结-二.json","excerpt":"<p>上一篇说到了react响应式设计原理和数据的绑定方法，下面继续总结</p>","keywords":null,"cover":"/2020/02/17/react%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%80%BB%E7%BB%93-%E4%BA%8C/20190622132004286.png","content":null,"text":"上一篇说到了react响应式设计原理和数据的绑定方法，下面继续总结第九章：列表渲染还是那句话，数据驱动试图，数据不能写死，下面我们把自己写死的两个li去掉，遍历状态里的list。为保证数据不为空，我们在list初始化的时候就加两个数据进去。<br>list: [&#39;学习re","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"react","slug":"react","count":2,"path":"api/tags/react.json"}]},{"title":"react学习笔记总结(一)","slug":"react学习笔记总结-一","date":"2020-02-16T03:21:53.000Z","updated":"2022-02-16T06:53:24.975Z","comments":true,"path":"api/articles/react学习笔记总结-一.json","excerpt":"<h2 id=\"第一章：前言\"><a href=\"#第一章：前言\" class=\"headerlink\" title=\"第一章：前言\"></a>第一章：前言</h2><p>大前端的时代，工程化，组件化的思想促成了前后端分工。前端不再满足小小的页面布局，正在扮演着愈发重要的角色。</p>","keywords":null,"cover":"/2020/02/16/react%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%80%BB%E7%BB%93-%E4%B8%80/20190622061636959.png","content":null,"text":"第一章：前言大前端的时代，工程化，组件化的思想促成了前后端分工。前端不再满足小小的页面布局，正在扮演着愈发重要的角色。整理这套笔记，我也参考了很多东西。在学习过程中，我看了三套视频教程，传智的，IT营的，慕课网的。此外，还有必读的官网教程和一本书《深入浅出React和Redux》","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"react","slug":"react","count":2,"path":"api/tags/react.json"}]}]}