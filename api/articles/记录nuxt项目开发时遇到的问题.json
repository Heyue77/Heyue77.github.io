{"title":"记录nuxt项目开发时遇到的问题","slug":"记录nuxt项目开发时遇到的问题","date":"2021-10-03T08:37:12.000Z","updated":"2022-02-16T11:13:41.433Z","comments":true,"path":"api/articles/记录nuxt项目开发时遇到的问题.json","photos":[],"link":"","excerpt":"Nuxt3的坑，是真多啊~~~~~~~~~~~~~~~最近在开发一个Nuxt项目，写到吐血。。。。","covers":["/2021/10/03/%E8%AE%B0%E5%BD%95nuxt%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/20220216164317.png","/2021/10/03/%E8%AE%B0%E5%BD%95nuxt%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/20210417215808666.png","/2021/10/03/%E8%AE%B0%E5%BD%95nuxt%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/2021041722031619.png","/2021/10/03/%E8%AE%B0%E5%BD%95nuxt%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/20210417221252114.png","/2021/10/03/%E8%AE%B0%E5%BD%95nuxt%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/20210417222058964.png","/2021/10/03/%E8%AE%B0%E5%BD%95nuxt%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/20210417222341949.gif","/2021/10/03/%E8%AE%B0%E5%BD%95nuxt%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/20210417222744720.png"],"content":"<p>Nuxt3的坑，是真多啊~~~~~~~~~~~~~~~</p>\n<p>最近在开发一个Nuxt项目，写到吐血。。。。</p>\n<span id=\"more\"></span>\n\n<p>关于asyncData<br>asyncData根据官网和大部分文章的介绍，这个api是充当在服务端调用异步接口的作用。服务端通过asyncData调用数据之后返回数据，渲染完整个页面之后，返回给前端。这就导致了在asyncData中我们无法使用this来获取数据。因为this是前端的概念，而asyncData是在服务端。<br>为了请求数据我安装了@nuxtjs/axios并根据文档，在nuxt.config.js中进行配置：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">modules: [</span><br><span class=\"line\">    <span class=\"string\">&#x27;@nuxtjs/axios&#x27;</span></span><br><span class=\"line\">],</span><br><span class=\"line\"> <span class=\"attr\">axios</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">proxy</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">withCredentials</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p> 给<code>axios</code>做一些拦截器封装，在<code>plugins/axios.js</code>中： </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">&#123; store, redirect, req, router, app: &#123; $axios &#125; &#125;</span>) </span>&#123;</span><br><span class=\"line\">  $axios.defaults.baseURL = <span class=\"string\">&#x27;/api&#x27;</span>    <span class=\"comment\">// 为了代理</span></span><br><span class=\"line\"></span><br><span class=\"line\">  $axios.onRequest(<span class=\"function\">(<span class=\"params\">config</span>) =&gt;</span> &#123;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  $axios.interceptors.response.use(</span><br><span class=\"line\">    <span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> response.data</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error.response)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p> 然后在<code>nuxt.config.js</code>中进行配置： </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [</span><br><span class=\"line\">    <span class=\"string\">&#x27;@/plugins/axios&#x27;</span></span><br><span class=\"line\">],</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p> 本地接口没有设置跨域这个鬼东西，于是需要本地自己配置一波： </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxy: &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;/api/&#x27;</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://localhost:8888&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">pathRewrite</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;^/api/&#x27;</span>: <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p> 好了在页面的<code>mounted</code>方法中调用，成功： </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mounted () &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.initData()</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">    <span class=\"keyword\">async</span> initData () &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 之前有给axios设置baseURL = &#x27;/api&#x27;,所以代理成功了</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> res = <span class=\"keyword\">await</span> <span class=\"built_in\">this</span>.$axios.get(<span class=\"string\">`/article?page=1`</span>)</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.list= res.data</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.total= res.count</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p> 然而我试图在<code>asyncData</code>这么操作时失败了： </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> asyncData (&#123; app, params &#125;) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = <span class=\"keyword\">await</span> app.$axios.$get(<span class=\"string\">&#x27;/article?page=1&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"attr\">list</span>: res.data,</span><br><span class=\"line\">      <span class=\"attr\">total</span>: res.count,</span><br><span class=\"line\">      <span class=\"attr\">page</span>: <span class=\"number\">2</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/10/03/%E8%AE%B0%E5%BD%95nuxt%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/20220216164317.png\" class>\n\n<p> <code>renderContext.renderResourceHints is not a function</code>，emmm我觉得我的操作没问题，也找了好久，没发现什么BUG，于是去找了<code>@nuxtjs/axios</code>官网，发现人家在<code>asyncData</code>中请求地址是带了域名的，于是： </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> asyncData (&#123; app, params &#125;) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = <span class=\"keyword\">await</span> app.$axios.$get(<span class=\"string\">&#x27;http://localhost:8888/article?page=1&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"attr\">list</span>: res.data,</span><br><span class=\"line\">      <span class=\"attr\">total</span>: res.count,</span><br><span class=\"line\">      <span class=\"attr\">page</span>: <span class=\"number\">2</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/10/03/%E8%AE%B0%E5%BD%95nuxt%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/20210417215808666.png\" class>\n\n<p>结果木有任何问题Orz…本真大胆推测小心求证我做了下面几件事：</p>\n<ul>\n<li>先确保后端接口没有设置Access-Control-Allow-Origin；</li>\n<li>删除axios.baseUrl的设置；</li>\n<li>设置配置文件中关于代理的配置，在asyncData请求带域名时，可以请求成功，但是在mounted中请求带域名时却报了跨域问题</li>\n</ul>\n<img src=\"/2021/10/03/%E8%AE%B0%E5%BD%95nuxt%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/2021041722031619.png\" class>\n\n<ul>\n<li>设置axios.baseUrl = ‘api’；</li>\n<li>设置代理；</li>\n<li>在mounted中使用不带域名的请求，请求成功。</li>\n<li>所以我总结出了一个不知道对不对的道理：axios的配置是针对前端的，所以在mounted中baseUrl和代理是有效的；而asyncData是针对服务端的，所以baseUrl和代理没有作用，且请求的时候需要使用完整的接口路径。</li>\n</ul>\n<h2 id=\"页面跳转和参数获取\"><a href=\"#页面跳转和参数获取\" class=\"headerlink\" title=\"页面跳转和参数获取\"></a>页面跳转和参数获取</h2><p>由于详情页面的渲染也要借助<code>asyncData</code>，所以获得页面路由<code>id</code>时发现<code>asyncData</code>只能通过<code>params</code>参数获取，所以创建详情文件的时候，需要使用这样的目录：</p>\n<img src=\"/2021/10/03/%E8%AE%B0%E5%BD%95nuxt%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/20210417221252114.png\" class>\n\n<p> 点击列表项跳转时，需要使用： </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">handleClick () &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.$router.push(&#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">`/details/<span class=\"subst\">$&#123;<span class=\"built_in\">this</span>.item.id&#125;</span>`</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p> 所以在详情页获取接口数据时是这么写的： </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> asyncData (&#123; params, app &#125;) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = <span class=\"keyword\">await</span> app.$axios.$get(<span class=\"string\">`http://localhost:8888/article/details?id=<span class=\"subst\">$&#123;params.id&#125;</span>`</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"attr\">info</span>: res</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"列表分页\"><a href=\"#列表分页\" class=\"headerlink\" title=\"列表分页\"></a>列表分页</h2><p>首页的列表本来是做了点击按钮之后切换上下页面的，然而发现假设在第二列表页面，点击进入详情，然后返回时，又会重新触发首页的<code>asyncData</code>，所以数据是第一页的数据。苍天的…</p>\n<img src=\"/2021/10/03/%E8%AE%B0%E5%BD%95nuxt%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/20210417222058964.png\" class>\n\n<p> 于是只能改称页面触底之后自动加载第二页，还会<code>nuxt.js</code>还有点人性啊，返回来之后会自动记录上次离开的位置，所以有位置并不一定准… </p>\n<img src=\"/2021/10/03/%E8%AE%B0%E5%BD%95nuxt%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/20210417222341949.gif\" class>\n\n<h2 id=\"点击跳转数据可以正常加载，刷新却出现了问题\"><a href=\"#点击跳转数据可以正常加载，刷新却出现了问题\" class=\"headerlink\" title=\"点击跳转数据可以正常加载，刷新却出现了问题\"></a>点击跳转数据可以正常加载，刷新却出现了问题</h2><p>这是个大坑啊，前面我们提到了，我的后台接口没有设置跨域，在使用<code>asyncData</code>我使用了全程接口<br>首页页（列表页）：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> asyncData (&#123; app &#125;) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = <span class=\"keyword\">await</span> app.$axios.$get(<span class=\"string\">&#x27;http://localhost:8888/article?page=1&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"attr\">list</span>: res.data,</span><br><span class=\"line\">      <span class=\"attr\">total</span>: res.count</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p> 详情页： </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> asyncData (&#123; params, app &#125;) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">const</span> res = <span class=\"keyword\">await</span> app.$axios.$get(<span class=\"string\">`http://localhost:8888/article/details?id=<span class=\"subst\">$&#123;params.id&#125;</span>`</span>)</span><br><span class=\"line\">   <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">     <span class=\"attr\">info</span>: res</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p> 从首页点击跳到详情页，竟然发生了这种惨状… </p>\n<img src=\"/2021/10/03/%E8%AE%B0%E5%BD%95nuxt%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/20210417222744720.png\" class>\n\n<p> 刷新，我的详情页又回来了 …….</p>\n<p> 那么我修改一下<strong>详情页的请求，不携带域名：</strong>(这里我开了代理） </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> asyncData (&#123; params, app &#125;) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = <span class=\"keyword\">await</span> app.$axios.$get(<span class=\"string\">`/article/details?id=<span class=\"subst\">$&#123;params.id&#125;</span>`</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"attr\">info</span>: res</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p> 然后首页跳转到详情没有问题，详情返回出首页依旧数据有问题，如果直接在详情刷新还会给一个BUG提示语…到这里我的心态已经崩了。<br>最后我找到了一个一劳永逸的办法，默默在后台接口项目设置了跨域： </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.use(<span class=\"keyword\">async</span> (ctx, next) =&gt; &#123;</span><br><span class=\"line\">  ctx.set(<span class=\"string\">&quot;Access-Control-Allow-Origin&quot;</span>, <span class=\"string\">&quot;*&quot;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">await</span> next()</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p> 首页和详情页都使用带有域名的接口地址，完事~ </p>\n<p>即，让后端设置一下跨域，前端直接使用完整的接口路由，不要借助代理了Orz，好了我明天去尝试一下部署到服务器上会不会有问题…</p>\n<p>未完待续…</p>\n","categories":[],"tags":[{"name":"Nuxt3","slug":"Nuxt3","count":2,"path":"api/tags/Nuxt3.json"}]}