{"title":"ReactNative之Android打包APK方法","slug":"ReactNative之Android打包APK方法","date":"2020-10-06T08:04:55.000Z","updated":"2022-02-16T08:26:41.510Z","comments":true,"path":"api/articles/ReactNative之Android打包APK方法.json","photos":[],"link":"","excerpt":" 踩坑无数的艰辛打包史。。。。","covers":["/2020/10/06/ReactNative%E4%B9%8BAndroid%E6%89%93%E5%8C%85APK%E6%96%B9%E6%B3%95/20220216161001.png","/2020/10/06/ReactNative%E4%B9%8BAndroid%E6%89%93%E5%8C%85APK%E6%96%B9%E6%B3%95/20220216161152.png","/2020/10/06/ReactNative%E4%B9%8BAndroid%E6%89%93%E5%8C%85APK%E6%96%B9%E6%B3%95/20220216161330.png","/2020/10/06/ReactNative%E4%B9%8BAndroid%E6%89%93%E5%8C%85APK%E6%96%B9%E6%B3%95/20220216161525.png","/2020/10/06/ReactNative%E4%B9%8BAndroid%E6%89%93%E5%8C%85APK%E6%96%B9%E6%B3%95/20220216161726.png","/2020/10/06/ReactNative%E4%B9%8BAndroid%E6%89%93%E5%8C%85APK%E6%96%B9%E6%B3%95/20220216161818.png","/2020/10/06/ReactNative%E4%B9%8BAndroid%E6%89%93%E5%8C%85APK%E6%96%B9%E6%B3%95/20220216161924.png","/2020/10/06/ReactNative%E4%B9%8BAndroid%E6%89%93%E5%8C%85APK%E6%96%B9%E6%B3%95/20220216162050.png","/2020/10/06/ReactNative%E4%B9%8BAndroid%E6%89%93%E5%8C%85APK%E6%96%B9%E6%B3%95/20220216162125.png","/2020/10/06/ReactNative%E4%B9%8BAndroid%E6%89%93%E5%8C%85APK%E6%96%B9%E6%B3%95/20220216162243.png"],"content":"<p> 踩坑无数的艰辛打包史。。。。</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p> <strong>Android 打包 闪退的问题,极有可能是你签名配置不正确,建议仔细检查每个步骤,找不到问题建议命令打包根据错误提示解决</strong> </p>\n</blockquote>\n<h1 id=\"1、生成签名秘钥：\"><a href=\"#1、生成签名秘钥：\" class=\"headerlink\" title=\"1、生成签名秘钥：\"></a>1、生成签名秘钥：</h1><h3 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一:\"></a>方法一:</h3><p>你可以用keytool命令生成一个私有密钥。在Windows上keytool命令放在JDK的bin目录中（比如C:\\Program Files\\Java\\jdkx.x.x_x\\bin），<br> 你可能需要在命令行中先进入那个目录才能执行此命令。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ keytool -genkey -v -keystore my-release-key.keystore -alias my-key-alias -keyalg RSA -keysize <span class=\"number\">2048</span> -validity <span class=\"number\">10000</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"方法二-直接使用-Android-studio-进行签名\"><a href=\"#方法二-直接使用-Android-studio-进行签名\" class=\"headerlink\" title=\"方法二: 直接使用 Android studio 进行签名\"></a>方法二: 直接使用 Android studio 进行签名</h3><ol>\n<li></li>\n</ol>\n<img src=\"/2020/10/06/ReactNative%E4%B9%8BAndroid%E6%89%93%E5%8C%85APK%E6%96%B9%E6%B3%95/20220216161001.png\" class>\n\n<p> 2.如果你没有就创建新的,当然这里也可以选中使用方法一创建的<code>keystore</code> </p>\n<img src=\"/2020/10/06/ReactNative%E4%B9%8BAndroid%E6%89%93%E5%8C%85APK%E6%96%B9%E6%B3%95/20220216161152.png\" class>\n\n<p>3.next 搞定</p>\n<p><strong>注意：请记得妥善地保管好你的密钥库文件，不要上传到版本库或者其它的地方。</strong></p>\n<h1 id=\"2、设置gradle变量：\"><a href=\"#2、设置gradle变量：\" class=\"headerlink\" title=\"2、设置gradle变量：\"></a>2、设置gradle变量：</h1><p>把<code>my-release-key.keystore</code>文件放到你工程中的<code>android/app</code>文件夹下。<br> 编辑<code>~/.gradle/gradle.properties</code>（没有这个文件你就创建一个），添加如下的代码（注意把其中的<code>****</code>替换为相应密码）<br> 注意：<code>~</code>表示用户目录，比如<code>windows</code>上可能是<code>C:\\Users\\用户名</code>，而<code>mac</code>上可能是<code>/Users/用户名</code>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MYAPP_RELEASE_STORE_FILE=my-release-key.keystore</span><br><span class=\"line\">MYAPP_RELEASE_KEY_ALIAS=my-key-alias</span><br><span class=\"line\">MYAPP_RELEASE_STORE_PASSWORD=*****</span><br><span class=\"line\">MYAPP_RELEASE_KEY_PASSWORD=*****</span><br></pre></td></tr></table></figure>\n\n<p> 这里可以放到这里面: </p>\n<img src=\"/2020/10/06/ReactNative%E4%B9%8BAndroid%E6%89%93%E5%8C%85APK%E6%96%B9%E6%B3%95/20220216161330.png\" class>\n\n<p> 上面的这些会作为全局的gradle变量，我们在后面的步骤中可以用来给应用签名。 </p>\n<h1 id=\"3、添加签名到应用的gradle配置中：\"><a href=\"#3、添加签名到应用的gradle配置中：\" class=\"headerlink\" title=\"3、添加签名到应用的gradle配置中：\"></a>3、添加签名到应用的gradle配置中：</h1><p>编辑你项目目录下的android/app/build.gradle，添加如下的签名配置：</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">android &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    defaultConfig &#123; ... &#125;</span><br><span class=\"line\">    signingConfigs &#123;</span><br><span class=\"line\">        release &#123;</span><br><span class=\"line\">            storeFile <span class=\"keyword\">file</span>(MYAPP_RELEASE_STORE_FILE)</span><br><span class=\"line\">            storePassword MYAPP_RELEASE_STORE_PASSWORD</span><br><span class=\"line\">            keyAlias MYAPP_RELEASE_KEY_ALIAS</span><br><span class=\"line\">            keyPassword MYAPP_RELEASE_KEY_PASSWORD</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    buildTypes &#123;</span><br><span class=\"line\">        release &#123;</span><br><span class=\"line\">            ...</span><br><span class=\"line\">            signingConfig signingConfigs.release</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"4、生成release版本的APK：\"><a href=\"#4、生成release版本的APK：\" class=\"headerlink\" title=\"4、生成release版本的APK：\"></a>4、生成release版本的APK：</h1><p> 现在可以生成签名版的APK 了：进入项目的根目录，在终端运行React Native 包管理器：<br><code>$ npm start</code><br>然后根目录在次运行下列命令： </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$  mkdir -p android/app/src/main/assets</span><br><span class=\"line\">$ curl -k &quot;http://localhost:8081/index.android.bundle&quot; &gt;android/app/src/main/assets/index.android.bundle  </span><br><span class=\"line\">$ cd android &amp;&amp; ./gradlew assembleRelease</span><br></pre></td></tr></table></figure>\n\n<p>解释：首先我们新建了一个<code>assets</code>目录来存储打包的<code>JavaScript</code>文件然后通过<code>curl</code>从<code>ReactNative</code>包管理器中获取<code>JavaScript</code>文件。最后使用<code>gradlew</code>来构建<code>release</code>版本的<code>APK</code></p>\n<h1 id=\"5、在设备上安装release版本的APK（以上完成之后我用的Android-Studio打包的）\"><a href=\"#5、在设备上安装release版本的APK（以上完成之后我用的Android-Studio打包的）\" class=\"headerlink\" title=\"5、在设备上安装release版本的APK（以上完成之后我用的Android Studio打包的）\"></a>5、在设备上安装release版本的APK（以上完成之后我用的Android Studio打包的）</h1><img src=\"/2020/10/06/ReactNative%E4%B9%8BAndroid%E6%89%93%E5%8C%85APK%E6%96%B9%E6%B3%95/20220216161525.png\" class>\n<p> 在项目的android/目录下运行   <code>./gradlew installRelease</code><br> 好啦完成了。如果你这样打包还出错建议在第四步的时候可以用AndroidStudio进行打包。<a href=\"https://www.jianshu.com/p/cc73aab478fc\">遇到问题可以看这个来解决</a></p>\n<h1 id=\"二、打包离线Bundle\"><a href=\"#二、打包离线Bundle\" class=\"headerlink\" title=\"二、打包离线Bundle\"></a>二、打包离线Bundle</h1><p>打包步骤</p>\n<p>在工程根目录下执行打包命令，</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">React-native bundle --entry-file index.android.js --bundle-output ./android/app/src/main/assets/index.android.jsbundle --platform android --assets-dest ./android/app/src/main/res/ --dev false</span><br></pre></td></tr></table></figure>\n\n<p> 0.49之后用这个: </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">React-native bundle --entry-file index.js --bundle-output ./android/app/src/main/assets/index.android.jsbundle --platform android --assets-dest ./android/app/src/main/res/ --dev false</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">注意: </span><br><span class=\"line\">1、[./android/app/src/main/assets/]文件夹必须存在，不存在就new一个assets文件夹，不然会报一个错误：</span><br><span class=\"line\"></span><br><span class=\"line\">ENOENT: no such file or directory, open &#x27;android/app/src/main/assets/index.android.bundle&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2、./android/app/这个路径一定要准确</span><br><span class=\"line\"></span><br><span class=\"line\">执行完毕后：</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2020/10/06/ReactNative%E4%B9%8BAndroid%E6%89%93%E5%8C%85APK%E6%96%B9%E6%B3%95/20220216161726.png\" class>\n\n<p>打包apk文件</p>\n<p>到你rn项目的根目录下执行：(或者直接使用<code>Androidstudio</code>打包就可以)<br> <code>cd android &amp;&amp; ./gradlew assembleRelease</code><br> 好啦～ 如果没有错的话，就说明apk文件打包完成了，然后到你的这个目录下：<br> <code>/android/app/build/outputs/apk</code></p>\n<h2 id=\"命令打包遇到问题\"><a href=\"#命令打包遇到问题\" class=\"headerlink\" title=\"命令打包遇到问题:\"></a>命令打包遇到问题:</h2><h3 id=\"问题1\"><a href=\"#问题1\" class=\"headerlink\" title=\"问题1:\"></a>问题1:</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* What went wrong:</span><br><span class=\"line\">Could not list contents of &#x27;xxxxx/node-pre-gyp/node_modules/.bin/detect-libc&#x27;. Couldn&#x27;t follow symbolic link.</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2020/10/06/ReactNative%E4%B9%8BAndroid%E6%89%93%E5%8C%85APK%E6%96%B9%E6%B3%95/20220216161818.png\" class>\n\n<p> 解决: 删掉那些找不到的,比如上面那些都删掉 </p>\n<h3 id=\"问题二\"><a href=\"#问题二\" class=\"headerlink\" title=\"问题二:\"></a>问题二:</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* What went wrong:</span><br><span class=\"line\">Execution failed for task &#x27;:app:processReleaseResources&#x27;.</span><br><span class=\"line\">&gt; com.android.ide.common.process.ProcessException: Failed to execute aapt</span><br></pre></td></tr></table></figure>\n\n<p> 解决方法:<br>1.这里检查一下上面报错日志上面给出的信息, 可能是因为打包 APK 导出asset文件或者图片文件格式不正确导致的,建议查看!<br>2.如图: </p>\n<img src=\"/2020/10/06/ReactNative%E4%B9%8BAndroid%E6%89%93%E5%8C%85APK%E6%96%B9%E6%B3%95/20220216161924.png\" class>\n\n<p>明显图片名字格式不正确.英文小写没有特殊符号数字等等.png<br>如果图片本事项目中不需要可以直接删掉.</p>\n<p>3.<code>cd android &amp;&amp; ./gradlew assembleRelease</code> 打包查看</p>\n<h3 id=\"问题三\"><a href=\"#问题三\" class=\"headerlink\" title=\"问题三\"></a>问题三</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Execution failed for task &#x27;:app:validateSigningRelease&#x27;. &gt; Keystore file /Users/xxxxx/app/annn.jks not found for signing config &#x27;release&#x27;.</span><br></pre></td></tr></table></figure>\n\n<p>说明你这个签名没有找到<br>解决方法:</p>\n<p>步骤如图: file -&gt; ProjectStructure -&gt;app -&gt; signing</p>\n<img src=\"/2020/10/06/ReactNative%E4%B9%8BAndroid%E6%89%93%E5%8C%85APK%E6%96%B9%E6%B3%95/20220216162050.png\" class>\n\n<img src=\"/2020/10/06/ReactNative%E4%B9%8BAndroid%E6%89%93%E5%8C%85APK%E6%96%B9%E6%B3%95/20220216162125.png\" class>\n\n<p> 将你创建的签名选上, </p>\n<h3 id=\"问题四\"><a href=\"#问题四\" class=\"headerlink\" title=\"问题四:\"></a>问题四:</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error:Execution failed for task &#x27;:app:processReleaseManifest&#x27;.</span><br><span class=\"line\">&gt; Manifest merger failed : Attribute application@label value=(xxx) from AndroidManifest.xml:16:7-26</span><br><span class=\"line\">    is also present at [:rn-fetch-blob] AndroidManifest.xml:35:18-50 value=(@string/app_name).</span><br><span class=\"line\">    Suggestion: add &#x27;tools:replace=&quot;android:label&quot;&#x27; to &lt;application&gt; element at AndroidManifest.xml:13:5-30:19 to override.</span><br></pre></td></tr></table></figure>\n\n<p>解决方法:<code>Suggestion: add &#39;tools:replace=&quot;android:label&quot;&#39; to  element at AndroidManifest.xml:13:5-30:19 to override.</code><br> 找到:</p>\n<img src=\"/2020/10/06/ReactNative%E4%B9%8BAndroid%E6%89%93%E5%8C%85APK%E6%96%B9%E6%B3%95/20220216162243.png\" class>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">首先在 &lt;manifest </span><br><span class=\"line\">  加上:  xmlns:tools=&quot;http://schemas.android.com/tools&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\"></span><br><span class=\"line\">其次在:&lt;application 加上这句: tools:replace=&quot;android:label&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&lt;/application&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>相关文章:<br> 1.<a href=\"https://www.jianshu.com/p/98c8f2a970eb\">React Native开发错误警告处理总结（已解决 ！持续更新)</a><br> 2.<a href=\"https://www.jianshu.com/p/ed58d272677d\">ReactNative 实现的文件上传功能(实测可行！)</a><br> 3.<a href=\"https://www.jianshu.com/p/dedca2d0e1b7\">React Native开发总结之：开发技巧和调试技巧</a><br> 4.<a href=\"https://www.jianshu.com/p/aa586ecf9597\">React Native开发总结：一、开发环境配置</a><br> 5.<a href=\"https://www.jianshu.com/p/cc73aab478fc\">Android 调试错误总结（ReactNative开发）（持续更新）</a><br> 6.<a href=\"https://www.jianshu.com/p/e080ceddddd1\">ReactNative开发之真机测试</a><br> 7<a href=\"https://www.jianshu.com/p/7967feec8038\">React Native开发之iOS打包ipa发布（亲测可行）</a></p>\n","categories":[],"tags":[{"name":"react—native","slug":"react—native","count":1,"path":"api/tags/react—native.json"}]}