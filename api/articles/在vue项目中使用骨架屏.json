{"title":"在vue项目中使用骨架屏","slug":"在vue项目中使用骨架屏","date":"2021-08-16T01:32:54.000Z","updated":"2022-02-16T01:51:13.608Z","comments":true,"path":"api/articles/在vue项目中使用骨架屏.json","photos":[],"link":"","excerpt":"现在的应用开发，基本上都是前后端分离的，前端主流框架有SPA、MPA等，那么解决页面渲染、白屏时间成为首要关注的点webpack可以按需加载，减小首屏需要加载代码的体积；","covers":["/2021/08/16/%E5%9C%A8vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8%E9%AA%A8%E6%9E%B6%E5%B1%8F/20210515100130221.jpeg","/2021/08/16/%E5%9C%A8vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8%E9%AA%A8%E6%9E%B6%E5%B1%8F/20210515100728814.jpeg","/2021/08/16/%E5%9C%A8vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8%E9%AA%A8%E6%9E%B6%E5%B1%8F/20210515100321137.jpeg","/2021/08/16/%E5%9C%A8vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8%E9%AA%A8%E6%9E%B6%E5%B1%8F/20210515101002316.jpeg","/2021/08/16/%E5%9C%A8vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8%E9%AA%A8%E6%9E%B6%E5%B1%8F/20210515101034306.jpeg","/2021/08/16/%E5%9C%A8vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8%E9%AA%A8%E6%9E%B6%E5%B1%8F/20210518233104861.jpeg","/2021/08/16/%E5%9C%A8vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8%E9%AA%A8%E6%9E%B6%E5%B1%8F/20210518233534412.jpeg"],"content":"<p>现在的应用开发，基本上都是前后端分离的，前端主流框架有SPA、MPA等，那么解决页面渲染、白屏时间成为首要关注的点</p>\n<p>webpack可以按需加载，减小首屏需要加载代码的体积；</p>\n<span id=\"more\"></span>\n\n<p>使用CDN技术、静态代码等缓存技术，可以减小加载渲染的时长</p>\n<p><strong>问题</strong>：但是首页依然存在加载、渲染等待时长的问题。那么如何从视觉效果上减小首屏白屏的时间呢？</p>\n<p><strong>骨架屏</strong>：举个例子：其实就是在模版文件中id=app容器下面写想要展示的效果，在new Vue(option)之后，该id下的内容就被替换了( 这时候，可能Vue编译生成的内容还没有挂载。因为new Vue的时候会进行一系列的初始化，这也需要耗费时间的)。这样就可以从视觉上减小白屏的时间</p>\n<p><strong>骨架屏的实现方式</strong></p>\n<p>1、直接在模版文件id=app容器下面，写进想要展示的效果html</p>\n<p>2、直接在模板文件id=app容器下面，用图片展示</p>\n<p>3、使用vue ssr提供的webpack插件</p>\n<p>4、自动生成并且自动插入静态骨架屏</p>\n<p>方式1和方式2存在的缺陷：针对不同入口，展示的效果都一样，导致不能灵活的针对不同的入口，展示不同的样式</p>\n<p>方式3可以针对不同的入口展示不同的效果。（实质也是先通过ssr生成一个json文件，然后将json文件内容注入到模板文件的id=app容器下）</p>\n<p> <strong>方案一、直接在模版文件id=app容器下面，写进想要展示的效果html</strong> </p>\n<p> 在根目录的模版文件内写进内容，如红色圈出来的地方 </p>\n<img src=\"/2021/08/16/%E5%9C%A8vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8%E9%AA%A8%E6%9E%B6%E5%B1%8F/20210515100130221.jpeg\" class>\n\n<p>在浏览器打开项目</p>\n<p>在调用new Vue之前的展示效果(只是做了个简单效果)：</p>\n<img src=\"/2021/08/16/%E5%9C%A8vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8%E9%AA%A8%E6%9E%B6%E5%B1%8F/20210515100728814.jpeg\" class>\n\n<p> 可以看到elements中id=app的容器下内容，就是我们写进的骨架屏效果内容 </p>\n<img src=\"/2021/08/16/%E5%9C%A8vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8%E9%AA%A8%E6%9E%B6%E5%B1%8F/20210515100321137.jpeg\" class>\n\n<p> 在看下调了new Vue之后的效果，id=app容器下的内容被vue编译生成的内容替换了 </p>\n<img src=\"/2021/08/16/%E5%9C%A8vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8%E9%AA%A8%E6%9E%B6%E5%B1%8F/20210515101002316.jpeg\" class>\n\n<img src=\"/2021/08/16/%E5%9C%A8vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8%E9%AA%A8%E6%9E%B6%E5%B1%8F/20210515101034306.jpeg\" class>\n\n<p><strong>方案二、直接在模板文件id=app容器下面，用图片展示(这个就不做展示了)</strong></p>\n<p><strong>方案三、使用vue ssr提供的webpack插件：即用.vue文件完成骨架屏</strong></p>\n<p>在方案一的基础上，将骨架屏的代码抽离出来，不在模版文件里面书写代码，而是在vue文件里面书写效果代码，这样便于维护</p>\n<p>1、在根目录下建一个skeleton文件夹，在该目录下创建文件App.vue文件（根组件，类似Vue项目的App.vue）、home.skeleton.vue(首页骨架屏展示效果的代码，类似Vue项目写的路由页面)、skeleton-entry.js(入口文件类似Vue项目的入口文件)、plugin/server-plugin.js(vue-server-renderer包提供了server-plugin插件，从里面将代码拷贝出来)</p>\n<img src=\"/2021/08/16/%E5%9C%A8vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8%E9%AA%A8%E6%9E%B6%E5%B1%8F/20210518233104861.jpeg\" class>\n\n<p> home.skeleton.vue(首页骨架屏展示效果的代码) </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;skeleton-home&quot;&gt;</span><br><span class=\"line\">    &lt;div&gt;加载中...&lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">.skeleton-home &#123;</span><br><span class=\"line\">  width: 100vw;</span><br><span class=\"line\">  height: 100vh;</span><br><span class=\"line\">  background-color: #eaeaea;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<p> App.vue(根组件) </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div id=&quot;app&quot;&gt;</span><br><span class=\"line\">    &lt;!-- 根组件 --&gt;</span><br><span class=\"line\">    &lt;home style=&quot;display:none&quot; id=&quot;homeSkeleton&quot;&gt;&lt;/home&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import home from &#x27;./home.skeleton.vue&#x27;</span><br><span class=\"line\">export default&#123;</span><br><span class=\"line\">  components: &#123;</span><br><span class=\"line\">    home</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">#app &#123;</span><br><span class=\"line\">  font-family: &#x27;Avenir&#x27;, Helvetica, Arial, sans-serif;</span><br><span class=\"line\">  -webkit-font-smoothing: antialiased;</span><br><span class=\"line\">  -moz-osx-font-smoothing: grayscale;</span><br><span class=\"line\">  text-align: center;</span><br><span class=\"line\">  color: #2c3e50;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">*&#123;</span><br><span class=\"line\">  padding: 0;</span><br><span class=\"line\">  margin: 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<p> skeleton-entry.js(入口文件) </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 入口文件</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> skeleton = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">render</span>(<span class=\"params\">h</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> h(App)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> skeleton</span><br></pre></td></tr></table></figure>\n\n<p> plugin/server-plugin.js(vue-server-renderer包提供了server-plugin插件) </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">/*  */</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">var</span> isJS = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">file</span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"regexp\">/\\.js(\\?[^.]+)?$/</span>.test(file); &#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">var</span> ref = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;chalk&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> red = ref.red;</span><br><span class=\"line\"><span class=\"keyword\">var</span> yellow = ref.yellow;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">var</span> prefix = <span class=\"string\">&quot;[vue-server-renderer-webpack-plugin]&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> warn = <span class=\"built_in\">exports</span>.warn = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">msg</span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"built_in\">console</span>.error(red((prefix + <span class=\"string\">&quot; &quot;</span> + msg + <span class=\"string\">&quot;\\n&quot;</span>))); &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> tip = <span class=\"built_in\">exports</span>.tip = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">msg</span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"built_in\">console</span>.log(yellow((prefix + <span class=\"string\">&quot; &quot;</span> + msg + <span class=\"string\">&quot;\\n&quot;</span>))); &#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">var</span> validate = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">compiler</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (compiler.options.target !== <span class=\"string\">&#x27;node&#x27;</span>) &#123;</span><br><span class=\"line\">    warn(<span class=\"string\">&#x27;webpack config `target` should be &quot;node&quot;.&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (compiler.options.output &amp;&amp; compiler.options.output.libraryTarget !== <span class=\"string\">&#x27;commonjs2&#x27;</span>) &#123;</span><br><span class=\"line\">    warn(<span class=\"string\">&#x27;webpack config `output.libraryTarget` should be &quot;commonjs2&quot;.&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!compiler.options.externals) &#123;</span><br><span class=\"line\">    tip(</span><br><span class=\"line\">      <span class=\"string\">&#x27;It is recommended to externalize dependencies in the server build for &#x27;</span> +</span><br><span class=\"line\">      <span class=\"string\">&#x27;better build performance.&#x27;</span></span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">var</span> VueSSRServerPlugin = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">VueSSRServerPlugin</span> (<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( options === <span class=\"keyword\">void</span> <span class=\"number\">0</span> ) options = &#123;&#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"built_in\">this</span>.options = <span class=\"built_in\">Object</span>.assign(&#123;</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;vue-ssr-server-bundle.json&#x27;</span></span><br><span class=\"line\">  &#125;, options);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\">VueSSRServerPlugin.prototype.apply = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">apply</span> (<span class=\"params\">compiler</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> this$<span class=\"number\">1</span> = <span class=\"built_in\">this</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">  validate(compiler);</span><br><span class=\"line\"> </span><br><span class=\"line\">  compiler.plugin(<span class=\"string\">&#x27;emit&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">compilation, cb</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> stats = compilation.getStats().toJson();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> entryName = <span class=\"built_in\">Object</span>.keys(stats.entrypoints)[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> entryAssets = stats.entrypoints[entryName].assets.filter(isJS);</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (entryAssets.length &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(</span><br><span class=\"line\">        <span class=\"string\">&quot;Server-side bundle should have one single entry file. &quot;</span> +</span><br><span class=\"line\">        <span class=\"string\">&quot;Avoid using CommonsChunkPlugin in the server config.&quot;</span></span><br><span class=\"line\">      )</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">var</span> entry = entryAssets[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!entry || <span class=\"keyword\">typeof</span> entry !== <span class=\"string\">&#x27;string&#x27;</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(</span><br><span class=\"line\">        (<span class=\"string\">&quot;Entry \\&quot;&quot;</span> + entryName + <span class=\"string\">&quot;\\&quot; not found. Did you specify the correct entry option?&quot;</span>)</span><br><span class=\"line\">      )</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">var</span> bundle = &#123;</span><br><span class=\"line\">      <span class=\"attr\">entry</span>: entry,</span><br><span class=\"line\">      <span class=\"attr\">files</span>: &#123;&#125;,</span><br><span class=\"line\">      <span class=\"attr\">maps</span>: &#123;&#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\">    stats.assets.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">asset</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (asset.name.match(<span class=\"regexp\">/\\.js$/</span>)) &#123;</span><br><span class=\"line\">        bundle.files[asset.name] = compilation.assets[asset.name].source();</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (asset.name.match(<span class=\"regexp\">/\\.js\\.map$/</span>)) &#123;</span><br><span class=\"line\">        bundle.maps[asset.name.replace(<span class=\"regexp\">/\\.map$/</span>, <span class=\"string\">&#x27;&#x27;</span>)] = <span class=\"built_in\">JSON</span>.parse(compilation.assets[asset.name].source());</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// do not emit anything else for server</span></span><br><span class=\"line\">      <span class=\"keyword\">delete</span> compilation.assets[asset.name];</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">var</span> json = <span class=\"built_in\">JSON</span>.stringify(bundle, <span class=\"literal\">null</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> filename = this$<span class=\"number\">1.</span>options.filename;</span><br><span class=\"line\"> </span><br><span class=\"line\">    compilation.assets[filename] = &#123;</span><br><span class=\"line\">      <span class=\"attr\">source</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> json; &#125;,</span><br><span class=\"line\">      <span class=\"attr\">size</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> json.length; &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\">    cb();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = VueSSRServerPlugin;</span><br></pre></td></tr></table></figure>\n\n<p> 2、新建一个骨架屏构建配置文件：build/webpack.skeleton.conf.js，这个文件配合vue-server-renderer插件，将App.vue内容构建成单个json格式的文件 </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> nodeExternals = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack-node-externals&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> VueSSRServerPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../skeleton/plugin/server-plugin&#x27;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 这允许 webpack 以 Node 适用方式(Node-appropriate fashion)处理动态导入(dynamic import)，</span></span><br><span class=\"line\">  <span class=\"comment\">// 并且还会在编译 Vue 组件时，</span></span><br><span class=\"line\">  <span class=\"comment\">// 告知 `vue-loader` 输送面向服务器代码(server-oriented code)。</span></span><br><span class=\"line\">  <span class=\"attr\">target</span>: <span class=\"string\">&#x27;node&#x27;</span>,</span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"comment\">// 对 bundle renderer 提供 source map 支持</span></span><br><span class=\"line\">  <span class=\"attr\">devtool</span>: <span class=\"string\">&#x27;source-map&#x27;</span>,</span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"comment\">// 将 entry 指向应用程序的 server entry 文件</span></span><br><span class=\"line\">  <span class=\"attr\">entry</span>: path.resolve(__dirname, <span class=\"string\">&#x27;../skeleton/skeleton-entry.js&#x27;</span>),</span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: path.resolve(__dirname, <span class=\"string\">&#x27;../skeleton&#x27;</span>),  <span class=\"comment\">// 生成的文件的目录</span></span><br><span class=\"line\">    <span class=\"attr\">publicPath</span>: <span class=\"string\">&#x27;/skeleton/&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;[name].js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">libraryTarget</span>: <span class=\"string\">&#x27;commonjs2&#x27;</span> <span class=\"comment\">// 此处告知 server bundle 使用 Node 风格导出模块(Node-style exports)</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\">        loader: <span class=\"string\">&#x27;vue-loader&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">compilerOptions</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">preserveWhitespace</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">        use: [<span class=\"string\">&#x27;vue-style-loader&#x27;</span>, <span class=\"string\">&#x27;css-loader&#x27;</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"attr\">performance</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">hints</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"comment\">// https://webpack.js.org/configuration/externals/#function</span></span><br><span class=\"line\">  <span class=\"comment\">// https://github.com/liady/webpack-node-externals</span></span><br><span class=\"line\">  <span class=\"comment\">// 外置化应用程序依赖模块。可以使服务器构建速度更快，</span></span><br><span class=\"line\">  <span class=\"comment\">// 并生成较小的 bundle 文件。</span></span><br><span class=\"line\">  <span class=\"attr\">externals</span>: nodeExternals(&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 不要外置化 webpack 需要处理的依赖模块。</span></span><br><span class=\"line\">    <span class=\"comment\">// 你可以在这里添加更多的文件类型。例如，未处理 *.vue 原始文件，</span></span><br><span class=\"line\">    <span class=\"comment\">// 你还应该将修改 `global`（例如 polyfill）的依赖模块列入白名单</span></span><br><span class=\"line\">    <span class=\"attr\">allowlist</span>: <span class=\"regexp\">/\\.css$/</span></span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"comment\">// 这是将服务器的整个输出</span></span><br><span class=\"line\">  <span class=\"comment\">// 构建为单个 JSON 文件的插件。</span></span><br><span class=\"line\">  <span class=\"comment\">// 不配置filename，则默认文件名为 `vue-ssr-server-bundle.json`</span></span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> VueSSRServerPlugin(&#123;</span><br><span class=\"line\">      <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;skeleton.json&#x27;</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>3、使用webpack-cli运行文件webpack.skeleton.conf.js，生成skeleton.json文件，放置在文件夹skeleton下</p>\n<p>在package.json文件里面书写运行命令：create-skeleton</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;create-skeleton&quot;</span>: <span class=\"string\">&quot;webpack --progress --config build/webpack.skeleton.conf.js&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;fill-skeleton&quot;</span>: <span class=\"string\">&quot;node ./skeleton/skeleton.js&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p> 在控制台上运行命令： </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run create-skeleton</span><br></pre></td></tr></table></figure>\n\n<p> 文件夹skeleton下就会多出skelleton.json文件 </p>\n<img src=\"/2021/08/16/%E5%9C%A8vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8%E9%AA%A8%E6%9E%B6%E5%B1%8F/20210518233534412.jpeg\" class>\n\n<p>4、将生成的skeleton.json内容注入到根目录下的index.html(模版文件)</p>\n<p>1）在文件夹skeleton下新建skeleton.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 将生成的skeleton.json的内容填充到模板文件中</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; resolve &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> createBundleRenderer = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;vue-server-renderer&#x27;</span>).createBundleRenderer</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 读取skeleton.json，以skeleton/index.html为模版写入内容</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> renderer = createBundleRenderer(resolve(__dirname, <span class=\"string\">&#x27;../skeleton/skeleton.json&#x27;</span>), &#123;</span><br><span class=\"line\">  <span class=\"attr\">template</span>: fs.readFileSync(resolve(__dirname, <span class=\"string\">&#x27;../skeleton/index.html&#x27;</span>), <span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 把上一步模版完成的内容写入根目录下的模版文件&#x27;index.html&#x27;</span></span><br><span class=\"line\">renderer.renderToString(&#123;&#125;, <span class=\"function\">(<span class=\"params\">err, html</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">console</span>.log(err)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;render complete!&#x27;</span>)</span><br><span class=\"line\">  fs.writeFileSync(<span class=\"string\">&#x27;index.html&#x27;</span>, html, <span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p> 2）添加运行命令：fill-skeleton </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;fill-skeleton&quot;: &quot;node ./skeleton/skeleton.js&quot;</span><br></pre></td></tr></table></figure>\n\n<p> 3）在控制台上运行该命令，则skeleton.json文件内容被填充至根目录下的模板文件index.html了 </p>\n<blockquote>\n<p>参考文章：</p>\n<p>利用Vue SSR 做骨架屏注入：<a href=\"https://www.cnblogs.com/goloving/p/11397371.html\">https://www.cnblogs.com/goloving/p/11397371.html</a></p>\n<p>在Vue中实现骨架屏：<a href=\"http://www.360doc.com/content/20/0709/11/21412_923150401.shtml\">http://www.360doc.com/content/20/0709/11/21412_923150401.shtml</a></p>\n<p>Vue ssr渲染踩过的坑：<a href=\"https://blog.csdn.net/chen801090/article/details/105974987/\">https://blog.csdn.net/chen801090/article/details/105974987/</a></p>\n</blockquote>\n","categories":[],"tags":[{"name":"vue3","slug":"vue3","count":3,"path":"api/tags/vue3.json"}]}