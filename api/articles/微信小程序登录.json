{"title":"微信小程序登录授权及获取用户信息API详解","slug":"微信小程序登录","date":"2020-11-19T14:30:35.000Z","updated":"2022-02-14T11:06:36.154Z","comments":true,"path":"api/articles/微信小程序登录.json","photos":[],"link":"","excerpt":null,"covers":["/2020/11/19/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%99%BB%E5%BD%95/Users\\爱海\\myblog\\source_posts\\微信小程序登录\\20200209154638639.jpg","/2020/11/19/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%99%BB%E5%BD%95/20200209154638639.jpg","/2020/11/19/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%99%BB%E5%BD%95/Users\\爱海\\myblog\\source_posts\\微信小程序登录\\20200209160500161.png","/2020/11/19/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%99%BB%E5%BD%95/20200209160500161.png"],"content":"<p>目录</p>\n<p>[toc] </p>\n<h1 id=\"一、API详解\"><a href=\"#一、API详解\" class=\"headerlink\" title=\"一、API详解\"></a><strong>一、API详解</strong></h1><h2 id=\"1-登录\"><a href=\"#1-登录\" class=\"headerlink\" title=\"1.登录\"></a>1.登录</h2><p>通过wx.login拿到code给后台，接口返回token、openID等参数。有了这些参数我们就可以直接请求那些不需要用户操作便可以读取的接口（比如：列表、详情、视频播放等等）；</p>\n<p> ①wx.login(OBJECT)</p>\n<p>调用接口wx.login() 获取临时登录凭证（code），调用成功后能拿到用户登录凭证（有效期五分钟）。开发者需要在开发者服务器（自己的服务器）后台调用 api，使用 code 换取 openID 和 session_key 等信息。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wx.login(&#123;</span><br><span class=\"line\">    <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(res) </span><br><span class=\"line\">        <span class=\"comment\">//&#123;errMsg: &quot;login:ok&quot;, code: &quot;081ckzKc1nYWou0wkHLc19pDKc1ckzKR&quot;&#125;</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (res.code) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 发起网络请求，用于用户登录</span></span><br><span class=\"line\">            wx.request(&#123;</span><br><span class=\"line\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;https://test.com/onLogin&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">code</span>: res.code</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;登录失败！&#x27;</span> + res.errMsg)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>②wx.checkSession(OBJECT)</p>\n<p>校验用户当前session_key是否有效。</p>\n<p>wx.login()调用时，用户的session_key会被更新而致使旧session_key失效。<br>微信不会把session_key的有效期告知开发者。<br>开发者在session_key失效时，可以通过重新执行登录流程获取有效的session_key。<br>当开发者在实现自定义登录态时，可以考虑以session_key有效期作为自身登录态有效期，也可以实现自定义的时效性策略。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wx.checkSession(&#123;</span><br><span class=\"line\">  <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//session_key 未过期，并且在本生命周期一直有效</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">fail</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// session_key 已经失效，需要重新执行登录流程</span></span><br><span class=\"line\">    wx.login() <span class=\"comment\">//重新登录</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>也就是说，每次打开应用时，检测微信session_key是否过期，如果没过期什么都不用做，如果过期了重新登录获取微信session_key。然后获取开发服务器的session，从而达成正真意义上的登录。</p>\n<h2 id=\"2-授权\"><a href=\"#2-授权\" class=\"headerlink\" title=\"2.授权\"></a>2.授权</h2><p>当小程序需要用户操作（比如：关注、评论、添加购物车、地理位置、个人中心等等），就需要用户先授权。</p>\n<p>①wx.authorize(OBJECT)</p>\n<p>提前向用户发起授权请求。调用后会立刻弹窗询问用户是否同意授权小程序使用某项功能或获取用户的某些数据，但不会实际调用对应接口。如果用户之前已经同意授权，则不会出现弹窗，直接返回成功。</p>\n<p>(1)如果用户已授权，可以直接调用接口；</p>\n<p>(2)如果用户未授权，会弹出授权框询问用户：</p>\n<p>a.拒绝授权：关闭授权框，用户操作无效（如关注，无法触发关注的http请求，保持原状）；</p>\n<p>b.接收授权：将用户信息通过token发送给后台，并主动请求用户操作（如关注，接收授权后触发关注的http请求，提示关注成功）。</p>\n<p>scope 为 “scope.userInfo” 时，无法弹出授权窗口。需要用button的方式，文章下面会讲。(小程序后面升级的)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 可以通过 wx.getSetting 先查询一下用户是否授权了 &quot;scope.record&quot; 这个 scope</span></span><br><span class=\"line\">wx.getSetting(&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">success</span>(<span class=\"params\">res</span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!res.authSetting[<span class=\"string\">&#x27;scope.record&#x27;</span>]) &#123;</span><br><span class=\"line\">            wx.authorize(&#123;</span><br><span class=\"line\">                <span class=\"attr\">scope</span>: <span class=\"string\">&#x27;scope.record&#x27;</span>,</span><br><span class=\"line\">                <span class=\"function\"><span class=\"title\">success</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 用户已经同意小程序使用录音功能，后续调用 wx.startRecord 接口不会弹窗询问</span></span><br><span class=\"line\">                    wx.startRecord()</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-用户信息\"><a href=\"#3-用户信息\" class=\"headerlink\" title=\"3.用户信息\"></a>3.用户信息</h2><p><strong>①wx.getUserInfo(OBJECT)</strong></p>\n<p><strong>注意：此接口有调整，使用该接口将不再出现授权弹窗，请使用下面代码来引导用户主动进行授权操作。</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">open-type</span>=<span class=\"string\">&quot;getUserInfo&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>当用户未授权过，调用该接口将直接报错 </li>\n<li>当用户授权过，可以使用该接口获取用户信息</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--wxml--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 如果只是展示用户头像昵称，可以使用 &lt;open-data /&gt; 组件 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">open-data</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;userAvatarUrl&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">open-data</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">open-data</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;userNickName&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">open-data</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 需要使用 button 来授权登录 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">wx:if</span>=<span class=\"string\">&quot;&#123;&#123;canIUse&#125;&#125;&quot;</span> <span class=\"attr\">open-type</span>=<span class=\"string\">&quot;getUserInfo&quot;</span> <span class=\"attr\">bindgetuserinfo</span>=<span class=\"string\">&quot;bindGetUserInfo&quot;</span>&gt;</span>授权登录<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">wx:else</span>&gt;</span>请升级微信版本<span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//js</span></span><br><span class=\"line\">Page(&#123;</span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">canIUse</span>: wx.canIUse(<span class=\"string\">&#x27;button.open-type.getUserInfo&#x27;</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">onLoad</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 查看是否授权</span></span><br><span class=\"line\">    wx.getSetting(&#123;</span><br><span class=\"line\">      <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">res</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">        <span class=\"comment\">// &#123;userInfo: ,rawData: ,signature ,encryptedData ,iv ,&#125;</span></span><br><span class=\"line\">        <span class=\"comment\">// userInfo参数是用户无关隐私的信息</span></span><br><span class=\"line\">        <span class=\"comment\">// encryptedData解密后是用于openId等隐私信息</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (res.authSetting[<span class=\"string\">&#x27;scope.userInfo&#x27;</span>]) &#123;</span><br><span class=\"line\">          <span class=\"comment\">// 已经授权，可以直接调用 getUserInfo 获取头像昵称</span></span><br><span class=\"line\">          wx.getUserInfo(&#123;</span><br><span class=\"line\">            <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">              <span class=\"built_in\">console</span>(res.userInfo)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">bindGetUserInfo</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(e.detail.userInfo)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>②getPhoneNumber(OBJECT)：获取微信用户绑定的手机号，需先调用login接口。因为需要用户主动触发才能发起获取手机号接口，所以该功能不由 API 来调用，需用 <button> 组件的点击来触发。</button></p>\n<p>注意：目前该接口针对【非个人开发者】，且完成了认证的小程序开放。需谨慎使用，若用户举报较多或被发现在不必要场景下使用，微信有权永久回收该小程序的该接口权限。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">open-type</span>=<span class=\"string\">&quot;getPhoneNumber&quot;</span> <span class=\"attr\">bindgetphonenumber</span>=<span class=\"string\">&quot;getPhoneNumber&quot;</span>&gt;</span> <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Page(&#123; </span><br><span class=\"line\">    <span class=\"attr\">getPhoneNumber</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123; </span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(e.detail.errMsg) </span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(e.detail.iv) </span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(e.detail.encryptedData) </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-部分字段解释\"><a href=\"#4-部分字段解释\" class=\"headerlink\" title=\"4.部分字段解释\"></a>4.部分字段解释</h2><p>openID：用户唯一标识。28位。不需要用户同意就能获取到。</p>\n<p>session_key： 会话密钥session_key 是对用户数据进行加密签名的密钥。为了应用自身的数据安全，只在开发服务器和微信服务器中交互，不会发送到前端。</p>\n<p>unionID：用户在开放平台的唯一标识符。如果开发者拥有多个移动应用、网站应用、和公众帐号（包括小程序），可通过unionid来区分用户的唯一性。换句话说，同一用户，对同一个微信开放平台下的不同应用，unionid是相同的。29位。需要用户授权或者已经关注过公众号，具体参考UnionID。</p>\n<h1 id=\"二、登录授权流程\"><a href=\"#二、登录授权流程\" class=\"headerlink\" title=\"二、登录授权流程\"></a>二、登录授权流程</h1><h2 id=\"1-模式概览\"><a href=\"#1-模式概览\" class=\"headerlink\" title=\"1.模式概览\"></a>1.模式概览</h2><p> 整体流程如下图： </p>\n<p><img src=\"/2020/11/19/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%99%BB%E5%BD%95/Users\\爱海\\myblog\\source_posts\\微信小程序登录\\20200209154638639.jpg\"></p>\n<img src=\"/2020/11/19/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%99%BB%E5%BD%95/20200209154638639.jpg\" class>\n\n<h2 id=\"2-主动登录\"><a href=\"#2-主动登录\" class=\"headerlink\" title=\"2.主动登录\"></a>2.主动登录</h2><p>由于APP中有些页面默认需要登录的，如[个人中心]页面，需要登录获取到用户信息，才能继续操作。这样的页面就需要在每次进入页面(<code>onShow</code>)时判断是否授权了。</p>\n<p>profile页面：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onShow () &#123;</span><br><span class=\"line\">    login(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">do</span> something...</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>关于登录授权相关的逻辑都可以封装在<code>handleLogin.js</code>中</p>\n<p>handleLogin.js：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 开始login</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">login</span> (<span class=\"params\">callback</span>) </span>&#123;</span><br><span class=\"line\">  wx.showLoading()</span><br><span class=\"line\">  wx.login(&#123;</span><br><span class=\"line\">    success (res) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (res.code) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 登录成功，获取用户信息</span></span><br><span class=\"line\">        getUserInfo(res.code, callback)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 否则弹窗显示，showToast需要封装</span></span><br><span class=\"line\">        showToast()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    fail () &#123;</span><br><span class=\"line\">      showToast()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 获取用户信息</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getUserInfo</span> (<span class=\"params\">code, callback</span>) </span>&#123;</span><br><span class=\"line\">  wx.getUserInfo(&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 获取成功，全局存储用户信息，开发者服务器登录</span></span><br><span class=\"line\">    success (res) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 全局存储用户信息</span></span><br><span class=\"line\">      store.commit(<span class=\"string\">&#x27;storeUpdateWxUser&#x27;</span>, res.userInfo)</span><br><span class=\"line\">      postLogin(code, res.iv, res.encryptedData, callback)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 获取失败，弹窗提示一键登录</span></span><br><span class=\"line\">    fail () &#123;</span><br><span class=\"line\">      wx.hideLoading()</span><br><span class=\"line\">      <span class=\"comment\">// 获取用户信息失败，清楚全局存储的登录状态，弹窗提示一键登录</span></span><br><span class=\"line\">      <span class=\"comment\">// 使用token管理登录态的，清楚存储全局的token</span></span><br><span class=\"line\">      <span class=\"comment\">// 使用cookie管理登录态的，可以清楚全局登录状态管理的变量</span></span><br><span class=\"line\">      store.commit(<span class=\"string\">&#x27;storeUpdateToken&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">      <span class=\"comment\">// 获取不到用户信息，说明用户没有授权或者取消授权。弹窗提示一键登录，后续会讲</span></span><br><span class=\"line\">      showLoginModal()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 开发者服务端登录</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">postLogin</span> (<span class=\"params\">code, iv, encryptedData, callback</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> params = &#123;</span><br><span class=\"line\">    <span class=\"attr\">code</span>: code,</span><br><span class=\"line\">    <span class=\"attr\">iv</span>: iv,</span><br><span class=\"line\">    <span class=\"attr\">encryptedData</span>: encryptedData</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  request(apiUrl.postLogin, params, <span class=\"string\">&#x27;post&#x27;</span>).then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (res.code == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      wx.hideLoading()</span><br><span class=\"line\">      <span class=\"comment\">// 登录成功，</span></span><br><span class=\"line\">      <span class=\"comment\">// 使用token管理登录态的，存储全局token，用于当做登录态判断，</span></span><br><span class=\"line\">      <span class=\"comment\">// 使用cookie管理登录态的，可以存任意变量当做已登录状态</span></span><br><span class=\"line\">      store.commit(<span class=\"string\">&#x27;storeUpdateToken&#x27;</span>, res.data.token)</span><br><span class=\"line\">      callback &amp;&amp; callback()</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      showToast()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;).catch(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    showToast()</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 显示toast弹窗</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showToast</span> (<span class=\"params\">content = <span class=\"string\">&#x27;登录失败，请稍后再试&#x27;</span></span>) </span>&#123;</span><br><span class=\"line\">  wx.showToast(&#123;</span><br><span class=\"line\">    <span class=\"attr\">title</span>: content,</span><br><span class=\"line\">    <span class=\"attr\">icon</span>: <span class=\"string\">&#x27;none&#x27;</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>到此为止，登录就算完成了。不管使用token还是cookie都可以，都能有正常的登录态了，可以执行后续操作。</p>\n<p>整个流程是 <code>wx.login</code> =&gt; <code>wx.getUserInfo</code> =&gt; 开发者服务器登录<code>postLogin</code>。</p>\n<h2 id=\"3-调用接口\"><a href=\"#3-调用接口\" class=\"headerlink\" title=\"3.调用接口\"></a>3.调用接口</h2><p>某些页面默认不需要登录，但某些用户操作事件是需要登录状态的，所以一者可以判断全局存储的登录状态管理的变量，如果为false，那么直接可以弹窗提示需要一键登录。二者如果全局状态为true，则调用接口看接口返回的code是否是未登录状态（此情况一般来说是登录态过期），未登录的话也弹窗提示需要一键登录。</p>\n<p>某页面（需登录的用户操作）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getPlayer () &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 判断全局是否有登录状态，如果没有直接弹窗提示一键登录</span></span><br><span class=\"line\">    isLogin(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> params = &#123;</span><br><span class=\"line\">            <span class=\"attr\">token</span>: <span class=\"built_in\">this</span>.token</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        request(apiUrl.getPlayer, params).then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// <span class=\"doctag\">TODO:</span> 删除打印</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (res.code === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                store.commit(<span class=\"string\">&#x27;storeUpdateUser&#x27;</span>, res.data.player_info)</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 获取失败了，如果是code是未登录，则去登录，然后执行回调函数this.getPlayer</span></span><br><span class=\"line\">                <span class=\"comment\">// 如果code不是未登录，直接弹窗报错误信息</span></span><br><span class=\"line\">                handleError(res, <span class=\"built_in\">this</span>.getPlayer)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;).catch(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            handleError(err)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p> handleLogin.js </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 判断是否登录</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isLogin</span> (<span class=\"params\">callback</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> token = store.state.token</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (token) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果有全局存储的登录态，暂时认为他是登录状态</span></span><br><span class=\"line\">    callback &amp;&amp; callback()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果没有登录态，弹窗提示一键登录</span></span><br><span class=\"line\">    showLoginModal()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 接口调用失败处理，</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handleError</span> (<span class=\"params\">res, callback</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 规定-3041和-3042分别代表未登录和登录态失效</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (res.code == -<span class=\"number\">3041</span> || res.code == -<span class=\"number\">3042</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 弹窗提示一键登录</span></span><br><span class=\"line\">    showLoginModal()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (res.msg) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 弹窗显示错误信息</span></span><br><span class=\"line\">    showToast(res.msg)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p> 到此为止，需要登录的用户操作就可以处理了。如果全局登录状态变量为<code>true</code>，先去调用接口，根据返回的信息是否是未登录再处理。 </p>\n<h2 id=\"4-弹窗提示\"><a href=\"#4-弹窗提示\" class=\"headerlink\" title=\"4.弹窗提示\"></a>4.弹窗提示</h2><p>由于微信小程序授权的接口<code>wx.getUserInfo</code>和<code>wx.authorize</code>中scope 为 “scope.userInfo” ，新版中调用这两个API是不会主动触发弹出授权窗口的。需要使用如下方式：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">open-type</span>=<span class=\"string\">&quot;getUserInfo&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>上面代码中多处出现的<code>showLoginModal</code>是用于显示一键登录的。如下：</p>\n<p>handleLogin.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 显示一键登录的弹窗</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showLoginModal</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  wx.showModal(&#123;</span><br><span class=\"line\">    <span class=\"attr\">title</span>: <span class=\"string\">&#x27;提示&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">content</span>: <span class=\"string\">&#x27;你还未登录，登录后可获得完整体验 &#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">confirmText</span>: <span class=\"string\">&#x27;一键登录&#x27;</span>,</span><br><span class=\"line\">    success (res) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 点击一键登录，去授权页面</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (res.confirm) &#123;</span><br><span class=\"line\">        wx.navigateTo(&#123;</span><br><span class=\"line\">          <span class=\"attr\">url</span>: <span class=\"string\">&#x27;授权登录页面地址&#x27;</span>,</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p> 关于授权登录，我们做了一个专门的页面处理，此处的<code>button</code>为: </p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;canIUse&quot;</span> <span class=\"attr\">open-type</span>=<span class=\"string\">&quot;getUserInfo&quot;</span> @<span class=\"attr\">getuserinfo</span>=<span class=\"string\">&quot;getUserInfo&quot;</span>&gt;</span>微信登录<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span>。</span><br></pre></td></tr></table></figure>\n\n<p> 如下图： </p>\n<p><img src=\"/2020/11/19/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%99%BB%E5%BD%95/Users\\爱海\\myblog\\source_posts\\微信小程序登录\\20200209160500161.png\"></p>\n<img src=\"/2020/11/19/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%99%BB%E5%BD%95/20200209160500161.png\" class>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getUserInfo (e) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (e.target.userInfo) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 点击Button弹窗授权，如果授权了，执行login</span></span><br><span class=\"line\">        <span class=\"comment\">// 因为Login流程中有wx.getUserInfo，此时就可以获取到了</span></span><br><span class=\"line\">        login(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 登录成功后，返回</span></span><br><span class=\"line\">            wx.navigateBack()</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>到此为止，整个授权和登录流程就算走完了。可以再回过头梳理一下最开始的流程图，应该就能理清整个逻辑了。</p>\n<p>其他具体用法请参考微信小程序<a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/\">官方文档</a>。</p>\n","categories":[],"tags":[{"name":"微信小程序登录","slug":"微信小程序登录","count":1,"path":"api/tags/微信小程序登录.json"}]}